<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
	<meta name='generator' content='ExamView HTML Generator 1.0.5'>
	<meta name='robots' content='noindex,nofollow'>
	<title>Exam Bank</title>
	<style type='text/css'>
		.spacer { line-height:.7em; }
		.title { font-size:13pt; font-weight:bold; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qnumber { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; text-align:right; }
		.choice { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.default { font-size:16pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qinfo { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.points { font-size:8pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		TD.pad { padding: 0pt 4pt 0pt 4pt; }
		.font1 { font-family:"Times New Roman", "Times", serif; }
		.font2 { font-family:"Times New Roman", "Times", serif; }
		.font3 { font-family:"Courier New", "Courier", monospace; }
		.font4 { font-family:"Times New Roman", "Times", serif; }
		.font5 { font-family:"Times New Roman", "Times", serif; }
		.font6 { font-family:"Arial", "Helvetica", sans-serif; }
		.font7 { font-family:"Calibri"; }
		.font8 { font-family:"Cambria"; }
	</style>
<script type='text/javascript' language='JavaScript1.1'>
<!--
	// Copyright (c) 2000-2008 eInstruction Corp.
	var listMap = '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
	var qtypeMap = '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999';
	var ansMap = new Array(129);
	var ptsMap = new Array(129);
	ansMap[0] = '';
	ptsMap[0] = 1;
	ansMap[1] = '';
	ptsMap[1] = 1;
	ansMap[2] = '';
	ptsMap[2] = 1;
	ansMap[3] = '';
	ptsMap[3] = 1;
	ansMap[4] = '';
	ptsMap[4] = 1;
	ansMap[5] = '';
	ptsMap[5] = 1;
	ansMap[6] = '';
	ptsMap[6] = 1;
	ansMap[7] = '';
	ptsMap[7] = 1;
	ansMap[8] = '';
	ptsMap[8] = 1;
	ansMap[9] = '';
	ptsMap[9] = 1;
	ansMap[10] = '';
	ptsMap[10] = 1;
	ansMap[11] = '';
	ptsMap[11] = 1;
	ansMap[12] = '';
	ptsMap[12] = 1;
	ansMap[13] = '';
	ptsMap[13] = 1;
	ansMap[14] = '';
	ptsMap[14] = 1;
	ansMap[15] = '';
	ptsMap[15] = 1;
	ansMap[16] = '';
	ptsMap[16] = 1;
	ansMap[17] = '';
	ptsMap[17] = 1;
	ansMap[18] = '';
	ptsMap[18] = 1;
	ansMap[19] = '';
	ptsMap[19] = 1;
	ansMap[20] = '';
	ptsMap[20] = 1;
	ansMap[21] = '';
	ptsMap[21] = 1;
	ansMap[22] = '';
	ptsMap[22] = 1;
	ansMap[23] = '';
	ptsMap[23] = 1;
	ansMap[24] = '';
	ptsMap[24] = 1;
	ansMap[25] = '';
	ptsMap[25] = 1;
	ansMap[26] = '';
	ptsMap[26] = 1;
	ansMap[27] = '';
	ptsMap[27] = 1;
	ansMap[28] = '';
	ptsMap[28] = 1;
	ansMap[29] = '';
	ptsMap[29] = 1;
	ansMap[30] = '';
	ptsMap[30] = 1;
	ansMap[31] = '';
	ptsMap[31] = 1;
	ansMap[32] = '';
	ptsMap[32] = 1;
	ansMap[33] = '';
	ptsMap[33] = 1;
	ansMap[34] = '';
	ptsMap[34] = 1;
	ansMap[35] = '';
	ptsMap[35] = 1;
	ansMap[36] = '';
	ptsMap[36] = 1;
	ansMap[37] = '';
	ptsMap[37] = 1;
	ansMap[38] = '';
	ptsMap[38] = 1;
	ansMap[39] = '';
	ptsMap[39] = 1;
	ansMap[40] = '';
	ptsMap[40] = 1;
	ansMap[41] = '';
	ptsMap[41] = 1;
	ansMap[42] = '';
	ptsMap[42] = 1;
	ansMap[43] = '';
	ptsMap[43] = 1;
	ansMap[44] = '';
	ptsMap[44] = 1;
	ansMap[45] = '';
	ptsMap[45] = 1;
	ansMap[46] = '';
	ptsMap[46] = 1;
	ansMap[47] = '';
	ptsMap[47] = 1;
	ansMap[48] = '';
	ptsMap[48] = 1;
	ansMap[49] = '';
	ptsMap[49] = 1;
	ansMap[50] = '';
	ptsMap[50] = 1;
	ansMap[51] = '';
	ptsMap[51] = 1;
	ansMap[52] = '';
	ptsMap[52] = 1;
	ansMap[53] = '';
	ptsMap[53] = 1;
	ansMap[54] = '';
	ptsMap[54] = 1;
	ansMap[55] = '';
	ptsMap[55] = 1;
	ansMap[56] = '';
	ptsMap[56] = 1;
	ansMap[57] = '';
	ptsMap[57] = 1;
	ansMap[58] = '';
	ptsMap[58] = 1;
	ansMap[59] = '';
	ptsMap[59] = 1;
	ansMap[60] = '';
	ptsMap[60] = 1;
	ansMap[61] = '';
	ptsMap[61] = 1;
	ansMap[62] = '';
	ptsMap[62] = 1;
	ansMap[63] = '';
	ptsMap[63] = 1;
	ansMap[64] = '';
	ptsMap[64] = 1;
	ansMap[65] = '';
	ptsMap[65] = 1;
	ansMap[66] = '';
	ptsMap[66] = 1;
	ansMap[67] = '';
	ptsMap[67] = 1;
	ansMap[68] = '';
	ptsMap[68] = 1;
	ansMap[69] = '';
	ptsMap[69] = 1;
	ansMap[70] = '';
	ptsMap[70] = 1;
	ansMap[71] = '';
	ptsMap[71] = 1;
	ansMap[72] = '';
	ptsMap[72] = 1;
	ansMap[73] = '';
	ptsMap[73] = 1;
	ansMap[74] = '';
	ptsMap[74] = 1;
	ansMap[75] = '';
	ptsMap[75] = 1;
	ansMap[76] = '';
	ptsMap[76] = 1;
	ansMap[77] = '';
	ptsMap[77] = 1;
	ansMap[78] = '';
	ptsMap[78] = 1;
	ansMap[79] = '';
	ptsMap[79] = 1;
	ansMap[80] = '';
	ptsMap[80] = 1;
	ansMap[81] = '';
	ptsMap[81] = 1;
	ansMap[82] = '';
	ptsMap[82] = 1;
	ansMap[83] = '';
	ptsMap[83] = 1;
	ansMap[84] = '';
	ptsMap[84] = 1;
	ansMap[85] = '';
	ptsMap[85] = 1;
	ansMap[86] = '';
	ptsMap[86] = 1;
	ansMap[87] = '';
	ptsMap[87] = 1;
	ansMap[88] = '';
	ptsMap[88] = 1;
	ansMap[89] = '';
	ptsMap[89] = 1;
	ansMap[90] = '';
	ptsMap[90] = 1;
	ansMap[91] = '';
	ptsMap[91] = 1;
	ansMap[92] = '';
	ptsMap[92] = 1;
	ansMap[93] = '';
	ptsMap[93] = 1;
	ansMap[94] = '';
	ptsMap[94] = 1;
	ansMap[95] = '';
	ptsMap[95] = 1;
	ansMap[96] = '';
	ptsMap[96] = 1;
	ansMap[97] = '';
	ptsMap[97] = 1;
	ansMap[98] = '';
	ptsMap[98] = 1;
	ansMap[99] = '';
	ptsMap[99] = 1;
	ansMap[100] = '';
	ptsMap[100] = 1;
	ansMap[101] = '';
	ptsMap[101] = 1;
	ansMap[102] = '';
	ptsMap[102] = 1;
	ansMap[103] = '';
	ptsMap[103] = 1;
	ansMap[104] = '';
	ptsMap[104] = 1;
	ansMap[105] = '';
	ptsMap[105] = 1;
	ansMap[106] = '';
	ptsMap[106] = 1;
	ansMap[107] = '';
	ptsMap[107] = 1;
	ansMap[108] = '';
	ptsMap[108] = 1;
	ansMap[109] = '';
	ptsMap[109] = 1;
	ansMap[110] = '';
	ptsMap[110] = 1;
	ansMap[111] = '';
	ptsMap[111] = 1;
	ansMap[112] = '';
	ptsMap[112] = 1;
	ansMap[113] = '';
	ptsMap[113] = 1;
	ansMap[114] = '';
	ptsMap[114] = 1;
	ansMap[115] = '';
	ptsMap[115] = 1;
	ansMap[116] = '';
	ptsMap[116] = 1;
	ansMap[117] = '';
	ptsMap[117] = 1;
	ansMap[118] = '';
	ptsMap[118] = 1;
	ansMap[119] = '';
	ptsMap[119] = 1;
	ansMap[120] = '';
	ptsMap[120] = 1;
	ansMap[121] = '';
	ptsMap[121] = 1;
	ansMap[122] = '';
	ptsMap[122] = 1;
	ansMap[123] = '';
	ptsMap[123] = 1;
	ansMap[124] = '';
	ptsMap[124] = 1;
	ansMap[125] = '';
	ptsMap[125] = 1;
	ansMap[126] = '';
	ptsMap[126] = 1;
	ansMap[127] = '';
	ptsMap[127] = 1;
	ansMap[128] = '';
	ptsMap[128] = 1;
	function GradeIt(f)
	{
		var	MAGIC = 840;
		var	htmlUrl = window.location.href;
		var	studentName;
		var	totalCorrect = 0;
		var	totalPossible = 0;
		var	numCorrect = 0;
		var	numPossible = 0;
		var	numBlank = 0;
		var	numSubjective = 0;
		var	currentInstruction;
		var	currentNarrative;
		var	scorePercent;
		var	index;
		var	msg;
		var	text;
		var	i;
		var	showFeedback = true;
		var	showRef = false;
		var	numQuestions = 129;
		var	numInstructions = 1;
		var	numNarratives = 0;
		var	prefixText = new Array(129);
		var	numberText = new Array(129);
		var	questionText = new Array(129);
		var	answerText = new Array(129);
		var	responseText = new Array(129);
		var	feedbackText = new Array(129);
		var	refText = new Array(129);
		var	narrativeIndex = new Array(0);
		var	narrativeText = new Array(0);
		var	instructionIndex = new Array(1);
		var	instructionText = new Array(1);
		var	listMap = '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
		var	titleString = 'Exam Bank';
		var	styleText = new Array(16);
		styleText[0] = '.spacer { line-height:.7em; }';
		styleText[1] = '.title { font-size:13pt; font-weight:bold; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[2] = '.qnumber { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; text-align:right; }';
		styleText[3] = '.choice { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[4] = '.default { font-size:16pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[5] = '.qinfo { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[6] = '.points { font-size:8pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[7] = 'TD.pad { padding: 0pt 4pt 0pt 4pt; }';
		styleText[8] = '.font1 { font-family:"Times New Roman", "Times", serif }';
		styleText[9] = '.font2 { font-family:"Times New Roman", "Times", serif }';
		styleText[10] = '.font3 { font-family:"Courier New", "Courier", monospace }';
		styleText[11] = '.font4 { font-family:"Times New Roman", "Times", serif }';
		styleText[12] = '.font5 { font-family:"Times New Roman", "Times", serif }';
		styleText[13] = '.font6 { font-family:"Arial", "Helvetica", sans-serif }';
		styleText[14] = '.font7 { font-family:"Calibri" }';
		styleText[15] = '.font8 { font-family:"Cambria" }';
		instructionText[0] = '<div class=\'default\'><b><span style=\'font-size:12pt\'>Short Answer</span></b></div>';
		instructionIndex[0] = 0;
		numberText[0] = '1.';
		questionText[0] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the difference between a class variable and an ' +
'instance variable?</span></div>';
		answerText[0] = '<div class=\'default\'><span class=\'font3\'><span style=\'font-size:12pt\'>An instance variable is a variable ' +
'which applies to an object. That means every object will have one copy of it.<br>&nbsp;&nbsp;&nbsp; A ' +
'class variable is a variable which applies to the entire class. The class variables will not have a ' +
'copy in the object</span></span></div>';
		feedbackText[0] = null;
		numberText[1] = '2.';
		questionText[1] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that will organize 5 integer parameters ' +
'into a sorted array</span></div>';
		answerText[1] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer :<br>public static int&#091;&#093; sorter(int a, ' +
'int b, int c, int d, int e){<br>int&#091;&#093; arr = {a,b,c,d,e};<br>Return ' +
'(Arrays.sort(arr));<br>}</span></div>';
		feedbackText[1] = null;
		numberText[2] = '3.';
		questionText[2] = '<div class=\'default\'><span style=\'font-size:12pt\'>Fix the code <br>public class Fraction {<br></span><div ' +
'style=\'margin-left:42pt\'><span style=\'font-size:12pt\'>int num;<br>int den;<br></span></div><div ' +
'style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>Fraction (int num, int den) {<br></span></div><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>num = num;<br></span></div><div ' +
'style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>den = den;<br></span></div><div ' +
'style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>}<br><br>public void getNum () ' +
'{<br></span></div><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>return this.num;<br></span></div><div ' +
'style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>}<br><br>public Fraction add(Fraction f1, Fraction ' +
'f2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Fraction(f1.num + f2.num, f1.den + ' +
'f2.den);<br>}<br><br>public String TOSTRING () {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.num + ' +
'&#8220;/&#8221; + this.den;<br>}<br></span></div><div style=\'margin-left:21pt\'><span ' +
'style=\'font-size:12pt\'>}</span></div></div>';
		answerText[2] = '<div class=\'default\'><div style=\'margin-left:21pt\'><span style=\'font-size:12pt\'>Ans: <br></span></div><span ' +
'style=\'font-size:12pt\'>public class Fraction {<br></span><div style=\'margin-left:42pt\'><span style=\'font-size:12pt\'>private int ' +
'num;<br>private int den;<br></span></div><div style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>public Fraction ' +
'(int num, int den) {<br></span></div><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>This.num = ' +
'num;<br></span></div><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>This.den = ' +
'den;<br></span></div><div style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>}<br><br>public void ' +
'getNum () {<br></span></div><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>return this.num;<br></span></div><div ' +
'style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>}<br><br>public static Fraction add(Fraction f1, ' +
'Fraction f2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Fraction(f1.num * f2.den + f2.num * ' +
'f1.den, f1.den * f2.den);<br>}<br><br>public String toString () {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'return this.num + &#8220;/&#8221; + this.den;<br>}<br></span></div><div ' +
'style=\'margin-left:21pt\'><span style=\'font-size:12pt\'>}</span></div></div>';
		feedbackText[2] = null;
		numberText[3] = '4.';
		questionText[3] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that asks for an integer and until a ' +
'negative integer is inputted. Output this first occurrence.</span></div>';
		answerText[3] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS:<br>import java.util.Scanner; <br>Scanner input = ' +
'new Scanner(System.in);<br>int n1;<br>boolean isNeg=false;<br><br>while (isNeg == false) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&#8220;Please enter an ' +
'integer:&#8221;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n1 = ' +
'input.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n1 &lt; 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isNeg = true;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}<br>//output ' +
'n1</span></div>';
		feedbackText[3] = null;
		numberText[4] = '5.';
		questionText[4] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write code that will determine how many integers are ' +
'between a given number and the next<br>perfect square.<br><br>Ex if 56 is given, the program will ' +
'output 8 as 64 - 56 = 8. In the case of an input of 64, 17 will be outputted as it will calculate ' +
'based on the next perfect square (81).</span></div>';
		answerText[4] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS:<br>int input = 49;<br>boolean done = false;<br>int ' +
'checker = (int) (Math.floor(Math.sqrt(input))) + 1;<br>int count = 0;<br>do {<br>if(Math.sqrt(input + ' +
'count) != checker) {<br>count++;<br>} else {<br>done = true;<br>}<br>}while(done == ' +
'false);<br>System.out.println(count);</span></div>';
		feedbackText[4] = null;
		numberText[5] = '6.';
		questionText[5] = '<div class=\'default\'><span style=\'font-size:12pt\'>Fix the syntax in this line of ' +
'code:<br>system.Outprintln(Please print &#8220;this&#8221; so I can Pass)</span></div>';
		answerText[5] = '<div class=\'default\'><span style=\'font-size:12pt\'>System.out.println(&#8220;Please print ' +
'\\&#8221;this\\&#8221; so I can Pass&#8221;);</span></div>';
		feedbackText[5] = null;
		numberText[6] = '7.';
		questionText[6] = '<div class=\'default\'><span style=\'font-size:12pt\'>Using loops, write the code that will make a 4x5 grid ' +
'consisting of O&#8217;s:</span></div>';
		answerText[6] = '<div class=\'default\'><span style=\'font-size:12pt\'>for (int i = 0; i &lt; 4; i++) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int ' +
'j = 0; j &lt; 5; j++) {<br></span><div style=\'margin-left:72pt\'><span style=\'font-size:12pt\'>System.out.println(&#8220;O&#8221;);<br></span></div><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>} <br></span></div><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		feedbackText[6] = null;
		numberText[7] = '8.';
		questionText[7] = '<div class=\'default\'><span style=\'font-size:12pt\'>Consider the following code snippet. <br></span><div ' +
'style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>if (aNumber &gt;= 0)<br>&nbsp;&nbsp;&nbsp; if ' +
'(aNumber == 0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;first ' +
'string&quot;);<br>else <br>&nbsp;&nbsp;&nbsp; System.out.println(&quot;second ' +
'string&quot;);<br>System.out.println(&quot;third string&quot;);<br><br>What output is the output if ' +
'aNumber is 3?</span></div></div>';
		answerText[7] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>Solution:<br></span></div><div ' +
'style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>second string<br>third string</span></div></div>';
		feedbackText[7] = null;
		numberText[8] = '9.';
		questionText[8] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that would print a message telling a ' +
'student if they failed.</span></div>';
		answerText[8] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>Public static void messenger(int a){<br>if ' +
'(passes(a)){<br>System.out.println(&#8220;Pass&#8221;);<br>}else ' +
'System.out.println(&#8220;Fail&#8221;);<br>}</span></div>';
		feedbackText[8] = null;
		numberText[9] = '10.';
		questionText[9] = '<div class=\'default\'><span style=\'font-size:12pt\'>Richard is playing a game of Yahzee. He needs a method ' +
'that will &#8220;roll&#8221; 6 fair-sided die and<br>add the numbers obtained from the rolling of ' +
'each die. Write that method.</span></div>';
		answerText[9] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>public int randomScore()<br>{<br>Random rnd = ' +
'new Random();<br>int randomnumber = rnd.nextInt(6)+1;<br>int total = 0;<br>for (int x=0; x&lt;=5; ' +
'x++){<br>total += randomnumber;<br>}<br>return total;<br>}</span></div>';
		feedbackText[9] = null;
		numberText[10] = '11.';
		questionText[10] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a code fragment that determines how many times ' +
'the letter &#8216;m&#8217; is used in the<br>the given string.<br>String fett = &quot;I&#039;m just a ' +
'simple man trying to make my way in the universe.&quot;;</span></div>';
		answerText[10] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS:<br>String fett = &quot;I&#039;m just a simple man ' +
'trying to make my way in the universe.&quot;;<br>int z = 0;<br>for (int x = 0; x&lt;fett.length(); ' +
'x++) {<br>if ' +
'(fett.charAt(x)==&#039;m&#039;){<br>z++;<br>}<br>}<br>System.out.println(z);</span></div>';
		feedbackText[10] = null;
		numberText[11] = '12.';
		questionText[11] = '<div class=\'default\'><span style=\'font-size:12pt\'>Orih is having a hard time in math class and needs to ' +
'practice his addition skills. Make a program that asks him to answer 20 addition questions and only ' +
'moves on if he gets the right answer.<br>Questions should be random and include numbers from 1 to ' +
'100.</span></div>';
		answerText[11] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>boolean correct = false;<br>for (int i = 0; i ' +
'&lt; 20; i++) {<br>correct = false;<br>double num1 = Math.round(100 * Math.random());<br>double num2 ' +
'= Math.round(100 * Math.random());<br>double answer = num1 + num2;<br>System.out.println(&quot;What ' +
'is the answer to &quot; + num1 + &quot; + &quot; + num2 + &quot;?&quot;);<br>double response = ' +
'user_input.nextDouble();<br>if (response == answer) {<br>correct = true;<br>} else {<br>do ' +
'{<br>System.out.println(&quot;What is the answer to &quot; + num1 + &quot; + &quot; + num2 + ' +
'&quot;?&quot;);<br>response = user_input.nextDouble();<br>if (response == answer) {<br>correct = ' +
'true;<br>}<br>} while (correct == false);<br>}</span></div>';
		feedbackText[11] = null;
		numberText[12] = '13.';
		questionText[12] = '<div class=\'default\'><span style=\'font-size:12pt\'>What will be the output of this program?<br></span><div ' +
'style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>public class ' +
'ArraysInJava<br>{<br>&nbsp;&nbsp;&nbsp; static void methodOne(int&#091;&#093; ' +
'a)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093; b = new ' +
'int&#091;5&#093;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ' +
'b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(a.length);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(b.length);<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp; public static void ' +
'main(String&#091;&#093; args)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'int&#091;&#093; a = new int&#091;10&#093;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'methodOne(a);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(a.length);<br>&nbsp;&nbsp;&nbsp; }<br>}</span></div></div>';
		answerText[12] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>Answer : ' +
'5510</span></div></div>';
		feedbackText[12] = null;
		numberText[13] = '14.';
		questionText[13] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Write a program that will output the ' +
'sum of all the previous integers of a number. For example, if the user inputs 5, the output will be ' +
'the sum of 5, 4, 3, 2 and 1.</span></span></div>';
		answerText[13] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>int number = ' +
'userInput.nextInt();<br>int sum = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>for (int x = number; x &gt; 0; x--)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + ' +
'x;<br>}<br><br>System.out.println(sum);</span></span></div>';
		feedbackText[13] = null;
		numberText[14] = '15.';
		questionText[14] = '<div class=\'default\'><span style=\'font-size:12pt\'>Rachel is hungry. She needs to find a restaurant to eat ' +
'lunch. She rates all her restaurants<br>on a scale from 1 to 10 and eats at the restaurant with the ' +
'highest rating. After she eats at a<br>restaurant, she gets sick of it and subtracts 1 from the ' +
'rating of the restaurant. Every restaurant has a restaurant number and a distinct restaurant name for ' +
'identification.<br><br>Write a program that determines which restaurant Rachel will eat after <i>n ' +
'</i>meals (her (n+1)th<br>meal). The first input would be the number of restaurants, <i>r </i>(0 &lt; ' +
'r &lt; 50) and the number of<br>meals, <i>n </i>(0 &lt; n &lt; 50). The next <i>r </i>lines contain: ' +
'the restaurant name followed by the restaurant rating and the restaurant number. Output the ' +
'restaurant name of Rachel&#8217;s (<i>n </i>+ 1)th meal.<br><br>Note: If there is a tie, Rachel ' +
'visits the restaurant with the smaller restaurant number.<br>For example:<br>Input: 3 5<br>McDonalds ' +
'1 1<br>Starbucks 10 2<br>Warehouse 8 3<br><br>Output: Warehouse</span></div>';
		answerText[14] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Answer:<br>public static void main ' +
'(String&#091;&#093; args) {<br>Scanner in = new Scanner(System.in);<br>int r = in.nextInt();<br>int n ' +
'= in.nextInt();<br>int&#091;&#093; rating = new int&#091;r&#093;;<br>int&#091;&#093; number = new ' +
'int&#091;r&#093;;<br>String&#091;&#093; name = new String&#091;r&#093;;<br>for (int i = 0; i &lt; r; ' +
'i++) {<br>name&#091;i&#093; = in.next();<br>rating&#091;i&#093; = ' +
'in.nextInt();<br>number&#091;i&#093; = in.nextInt();<br>}<br>int highestRatingPlace = 0;<br>for (int ' +
'i = 0; i &lt;= n; i++) {<br>highestRatingPlace = 0;<br>for (int j = 1; j &lt; r; j++) {<br>if ' +
'(rating&#091;j&#093; &gt; rating&#091;highestRatingPlace&#093;) {<br>highestRatingPlace = j;<br>} ' +
'else if (rating&#091;j&#093; == rating&#091;highestRatingPlace&#093;){<br>if (number&#091;j&#093; ' +
'&lt; number&#091;highestRatingPlace&#093;) {<br>highestRatingPlace = ' +
'j;<br>}<br>}<br>}<br>rating&#091;highestRatingPlace&#093;--;<br>System.out.println(rating&#091;0&#093; ' +
'+ &quot;&quot; + rating&#091;1&#093; + &quot;&quot; + ' +
'rating&#091;2&#093;);<br>}<br>System.out.println(name&#091;highestRatingPlace&#093;);<br>}</span></div>';
		feedbackText[14] = null;
		numberText[15] = '16.';
		questionText[15] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the output of the following code?<br>String s = ' +
'&#8220;Where am I?&#8221;;<br>System.out.println(s.toLowerCase().substring(1,5));</span></div>';
		answerText[15] = '<div class=\'default\'><span style=\'font-size:12pt\'>(Answer) here</span></div>';
		feedbackText[15] = null;
		numberText[16] = '17.';
		questionText[16] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the following piece of ' +
'code.<br></span><span style=\'font-size:12pt\'><br></span><span style=\'font-size:12pt\'>public class Student ' +
'{<br></span><div style=\'margin-left:42pt\'><span style=\'font-size:12pt\'>String name;<br>int ' +
'mark;<br></span></div><div style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>public Student (String ' +
'name, int mark) {<br></span></div><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>this.name = ' +
'name;<br></span></div><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>this.mark = ' +
'mark;<br></span></div><div style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>}<br></span></div><span ' +
'style=\'font-size:12pt\'><br></span><div style=\'text-indent:21pt\'><span style=\'font-size:12pt\'>public String ' +
'toString () {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.name + &#8220;: &#8221; + ' +
'this.mark;<br>}<br><br>public boolean equals (Student other){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'return this.mark == other.mark;<br>}<br><br>public static void main(String&#091;&#093; ' +
'args){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamesW = new Student(&#8220;James&#8221;, ' +
'90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamie = new Student(&#8220;Jamie&#8221;, ' +
'90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamesV = new Student(&#8220;James&#8221;, ' +
'90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(jamesV);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(jamie);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(jamesW.equals(jamie));<br>}<br></span></div><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		answerText[16] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: <br>James: 90<br>Jamie: 90<br>true</span></div>';
		feedbackText[16] = null;
		numberText[17] = '18.';
		questionText[17] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that would determine if a ' +
'student&#8217;s mark passes</span></div>';
		answerText[17] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>public static boolean passes(int ' +
'a){<br>return (a &gt;= 50);<br>}</span></div>';
		feedbackText[17] = null;
		numberText[18] = '19.';
		questionText[18] = '<div class=\'default\'><span style=\'font-size:12pt\'>Make a constructor for the class called ' +
'&#8220;Bike&#8221;. The constructor has to set the default variables to: first gear, blue, 10, true, ' +
'in that order. <br></span><div style=\'margin-left:18pt\'><span style=\'font-size:12pt\'>int gear;<br>String ' +
'color;<br>int speed;<br>boolean inMotion;</span></div></div>';
		answerText[18] = '<div class=\'default\'><span style=\'font-size:12pt\'><span style=\'color:#ff0000\'><br></span></span><div ' +
'style=\'margin-left:18pt\'><span style=\'font-size:12pt\'><span style=\'color:#ff0000\'>Answer: <br></span></span><span ' +
'style=\'font-size:12pt\'><span class=\'font7\'><img width=\'392\' height=\'150\' align=\'bottom\' alt="sa019-1.jpg" ' +
'src="exambankshortanswer_files/sa019-1.jpg" border=\'0\'></span></span></div></div>';
		feedbackText[18] = null;
		numberText[19] = '20.';
		questionText[19] = '<div class=\'default\'><span style=\'font-size:12pt\'>A triangle has Area = 136, semi-perimeter = 29, side b ' +
'= 23, side c = 13. Create a program to calculate the value of a. Heron&#8217;s formula is shown below ' +
'if required.<br> Heron&#8217;s formula:&nbsp; a = -b - c + 2*s;</span></div>';
		answerText[19] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>Rearrange semi-perimeter ' +
'formula.<br><br><br>Response should look similar to this:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double a;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double b = 23;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double c = 13;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double s = 29;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = -b -c + ' +
'2*s;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(a);</span></div>';
		feedbackText[19] = null;
		numberText[20] = '21.';
		questionText[20] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>if (aNumber ' +
'&gt;= 0)<br>&nbsp;&nbsp;&nbsp; if (aNumber == 0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;first string&quot;);<br>else <br>&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;second string&quot;);<br>System.out.println(&quot;third ' +
'string&quot;);<br></span></div><span style=\'font-size:12pt\'><br>Use braces { and } to further clarify ' +
'the code and reduce the possibility of errors by future maintainers of the code.</span></div>';
		answerText[20] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>Solution:<br></span></div><div ' +
'style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>if (aNumber &gt;= 0) {<br>&nbsp;&nbsp;&nbsp; if ' +
'(aNumber == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;first ' +
'string&quot;);<br>&nbsp;&nbsp;&nbsp; } else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;second string&quot;);<br>&nbsp;&nbsp;&nbsp; ' +
'}<br>}<br><br>System.out.println(&quot;third string&quot;);</span></div></div>';
		feedbackText[20] = null;
		numberText[21] = '22.';
		questionText[21] = '<div class=\'default\'><span style=\'font-size:12pt\'>class Number{<br>int num;<br>}<br>myNum is an instance ' +
'of the class Number. Why would the code&nbsp; &#8220;System.out.println(myNum)&#8221;<br>return ' +
'Number@1ab5d3 instead of the value of the myNum.num?</span></div>';
		answerText[21] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: myNum refers to a memory location, given by the ' +
'address Number@1ab5d3, it does not<br>refer directly to a value.</span></div>';
		feedbackText[21] = null;
		numberText[22] = '23.';
		questionText[22] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write method rndNum that returns a random integer ' +
'between int x and int y.</span></div>';
		answerText[22] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>public static int rndNum (int x, int y) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'(int)Math.round((((y)*(1-(x/y)))*Math.random())+x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>}</span></div>';
		feedbackText[22] = null;
		numberText[23] = '24.';
		questionText[23] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method, <b>sort</b>, that will print three ' +
'integer values in order of least to greatest.<br><br>public static void sort (int x, int y, int ' +
'z)</span></div>';
		answerText[23] = '<div class=\'default\'>vary</div>';
		feedbackText[23] = null;
		numberText[24] = '25.';
		questionText[24] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that tells whether a random coin is ' +
'heads or tails (1 = heads, 2 = tails)</span></div>';
		answerText[24] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int rand;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rand = (int) ((Math.random()*2)+1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rand == ' +
'1){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot; You got heads!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot; You got tails!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div>';
		feedbackText[24] = null;
		numberText[25] = '26.';
		questionText[25] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method code that inputs a positive integer, and ' +
'outputs it in scientific notation (&#8220;a * 10^n&#8221; where a is between 0 and 10 exclusive, and ' +
'n is an integer).</span></div>';
		answerText[25] = '<div class=\'default\'><span style=\'font-size:12pt\'>(Answer) public static String science(int ' +
'number){return Double.toString((double) number / Math.pow(10, Integer.toString(number).length()-1)) + ' +
'&quot; * 10^&quot; + (Integer.toString(number).length()-1;</span></div>';
		feedbackText[25] = null;
		numberText[26] = '27.';
		questionText[26] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write an array <i>g </i>that stores the grades of a ' +
'class of <i>n </i>students based on user input<br>(0 <i>&lt;= g </i>&lt;= 100; <i>n </i>&gt; 0). ' +
'Write 3 functions that determine:<br>a) the mean of the grades (the average, i.e. sum / number of ' +
'students)<br>b) the mode of the grades (the grade with the most occurrences)<br>c) the median of the ' +
'grades (the &#8220;middle&#8221; grade)</span></div>';
		answerText[26] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Answer:<br>public static void main ' +
'(String&#091;&#093; args) {<br>Scanner in = new Scanner(System.in);<br>int n = ' +
'in.nextInt();<br>int&#091;&#093; g = new int&#091;n&#093;;<br>for (int i = 0; i &lt; n; i++) ' +
'{<br>g&#091;i&#093; = in.nextInt();<br>}<br>}<br>public double mean (int&#091;&#093; g) {<br>double ' +
'mean = 0;<br>for (int i = 0; i &lt; g.length; i++) {<br>mean += g&#091;i&#093;;<br>}<br>mean /= ' +
'g.length;<br>return mean;<br>}<br>public int mode (int&#091;&#093; g) {<br>int mode = ' +
'0;<br>int&#091;&#093; freq = new int&#091;101&#093;;<br>for (int i = 0; i &lt; g.length; i++) ' +
'{<br>freq&#091;g&#091;i&#093;&#093;++;<br>}<br>for (int i = 0; i &lt; 101; i++) {<br>if ' +
'(freq&#091;i&#093; &gt; mode) {<br>mode = freq&#091;i&#093;;<br>}<br>}<br>return mode;<br>}<br>public ' +
'double median (int&#091;&#093; g) {<br>double median = 0;<br>Arrays.sort(g);<br>if (g.length % 2 == ' +
'0) {<br>median = ((g&#091;(int) Math.floor(g.length / 2)&#093;) + (g&#091;(int) Math.floor(g.length / ' +
'2)&#093;)) / 2;<br>} else {<br>median = g&#091;(int) Math.ceil(g.length / 2)&#093;;<br>}<br>return ' +
'median;<br>}</span></div>';
		feedbackText[26] = null;
		numberText[27] = '28.';
		questionText[27] = '<div class=\'default\'><span class=\'font8\'><span style=\'font-size:12pt\'>Given the phrase &#8220;The quick ' +
'brown fox jumped over the lazy dog&#8221;, write a method to find all the indexes for the spaces in ' +
'the phrase.</span></span></div>';
		answerText[27] = '<div class=\'default\'><span style=\'font-size:12pt\'>vary</span></div>';
		feedbackText[27] = null;
		numberText[28] = '29.';
		questionText[28] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write method printX that prints a line of String x, int ' +
'y times.</span></div>';
		answerText[28] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>public static void printX (String x, int y) ' +
'{<br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>for (int k=1; k&lt;=y;k++) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'system.out.println(x+&#8221;\\n&#8221;);<br>}<br></span></div><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		feedbackText[28] = null;
		numberText[29] = '30.';
		questionText[29] = '<div class=\'default\'><span style=\'font-size:12pt\'>What would be the output of the following ' +
'code?<br><br>public static double Method1 (int num1, int num2)<br>{<br>System.out.println(&quot;First ' +
'Calculation&quot;);<br>return num1+num2;<br>}<br>public static int Method (int var1, int ' +
'var2)<br>{<br>System.out.println(&quot;Second Calculation&quot;);<br>return var1-var2;<br>}<br>public ' +
'static void main(String&#091;&#093; args) ' +
'{<br>{<br>System.out.println(Method(10,25));<br>System.out.println(Method1(30,89));<br>}<br>}</span></div>';
		answerText[29] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>Second Calculation<br>-15<br>First ' +
'Calculation<br>119.0</span></div>';
		feedbackText[29] = null;
		numberText[30] = '31.';
		questionText[30] = '<div class=\'default\'><span style=\'font-size:12pt\'>Mark is trying to collect the real names of users on ' +
'her social media website. Unfortunately,<br>many users have been trolling his system and are ' +
'inserting characters into their names that<br>clearly do not belong. Using a loop, how can Mark force ' +
'users to insert proper names (i.e: names that do not include symbols and integers)?<br>Use the ' +
'variable &#8220;name&#8221; for user input.</span></div>';
		answerText[30] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>boolean valid = false;<br>do ' +
'{<br>System.out.println(&quot;What is your name?&quot;);<br>name = user_input.next();<br>if ' +
'(name.matches(&quot;&#091;a-zA-Z&#093;+&quot;)) {<br>valid = true;<br>}<br>} while (valid == ' +
'false);</span></div>';
		feedbackText[30] = null;
		numberText[31] = '32.';
		questionText[31] = '<div class=\'default\'><span style=\'font-size:12pt\'>Crystal is works at a bank and is concealing PINs. Once ' +
'someone types in their PIN, all the<br>characters should be replaced with a &#8216;*&#8217;. Write a ' +
'loop that changes all characters to an asterisk and prints the resulting string. The PIN is a ' +
'string.</span></div>';
		answerText[31] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>char&#091;&#093; letters = ' +
'pin.toCharArray();<br>for(int i = 0; i&lt;letters.length; i++){<br>letters&#091;i&#093; = ' +
'&#039;*&#039;;<br>}<br>for(int i = 0; i&lt;letters.length; ' +
'i++){<br>System.out.print(letters&#091;i&#093;);<br>}</span></div>';
		feedbackText[31] = null;
		numberText[32] = '33.';
		questionText[32] = '<div class=\'default\'><span style=\'font-size:12pt\'>When would you choose to use a while loop?&nbsp; ' +
'Provide a specific example.</span></div>';
		answerText[32] = '<div class=\'default\'><span style=\'font-size:14pt\'>ANS <b>: </b>a </span><span ' +
'style=\'font-size:12pt\'><b><span style=\'color:#222222\'>while loop is used to repeat a section of code an ' +
'unknown number of<br>times until a specific condition is met.&nbsp; Varied</span></b></span></div>';
		feedbackText[32] = null;
		numberText[33] = '34.';
		questionText[33] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that prints out all the duplicate values ' +
'in a given integer array with an array.</span></div>';
		answerText[33] = '<div class=\'default\'><span style=\'font-size:12pt\'>public static void duplicate (int&#091;&#093; x) ' +
'{<br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>for (int a = 0; a &lt; x.length - ' +
'1; a++) {<br></span></div><span style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int b = a + 1; b &lt; x.length; b++) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'((x&#091;a&#093; == x&#091;b&#093;) &amp;&amp; (a != b)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.printf(&quot;Duplicate Value Found: x&#091;%s&#093; is equal to x&#091;%s&#093; which is ' +
'equal to %s!%n&quot;, a, b, x&#091;b&#093;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}</span></div>';
		feedbackText[33] = null;
		numberText[34] = '35.';
		questionText[34] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a piece of code to display the following using ' +
'loops:<br>1<br>22<br>333<br>4444<br>55555<br>666666<br>7777777<br>88888888<br>999999999</span></div>';
		answerText[34] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: <br>String output;<br>for(int i = 1; i &lt;= 9; ' +
'i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j = 1; j &lt;= i; ' +
'j++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output += i;<br></span><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>}<br></span></div><span ' +
'style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(output);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output = ' +
'&#8220;&#8221;;<br>}</span></div>';
		feedbackText[34] = null;
		numberText[35] = '36.';
		questionText[35] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Write a program that calculates the ' +
'average of the numbers entered. It will continue outputting the average as new numbers are entered ' +
'until the user inputs a 0. <br></span></span><div style=\'font-size:2pt\'></div><table cellpadding=\'0\' cellspacing=\'0\' width=\'92%\' border=\'0\'><tr valign=\'top\'><td class=\'pad\' style=\' border-left:0.8pt ' +
'solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt ' +
'solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>Sample Input</span></span></td><td ' +
'class=\'pad\' style=\' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; ' +
'border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>Sample Output</span></span></td></tr><tr ' +
'valign=\'top\'><td class=\'pad\' style=\' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; ' +
'border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>3</span></span></td><td ' +
'class=\'pad\' style=\' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>3</span></span></td></tr><tr ' +
'valign=\'top\'><td class=\'pad\' style=\' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; ' +
'border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>7</span></span></td><td ' +
'class=\'pad\' style=\' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>5</span></span></td></tr><tr ' +
'valign=\'top\'><td class=\'pad\' style=\' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; ' +
'border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>6</span></span></td><td ' +
'class=\'pad\' style=\' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>5.33333</span></span></td></tr><tr ' +
'valign=\'top\'><td class=\'pad\' style=\' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; ' +
'border-bottom:0.8pt solid #000000;\'><span class=\'font6\'><span style=\'font-size:12pt\'>0</span></span></td><td ' +
'class=\'pad\' style=\' border-right:0.8pt solid #000000; border-bottom:0.8pt solid ' +
'#000000;\'>&nbsp;</td></tr><tr height=\'0\' style=\'border:none\'><td width=\'50%\'></td><td ' +
'width=\'50%\'></td></tr></table></div>';
		answerText[35] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>float userNum = 0;<br>float average = ' +
'0;<br>int x = 0;<br><br>do<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Enter a ' +
'number&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; userNum = ' +
'userInput.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; average = (average*x + userNum)/(x + ' +
'1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(average);<br>} while (!(userNum == 0));</span></span></div>';
		feedbackText[35] = null;
		numberText[36] = '37.';
		questionText[36] = '<div class=\'default\'><span style=\'font-size:12pt\'>**** Write a function to return all possible ' +
'combinations of 3 elements of an array<br>&nbsp;&nbsp; (you may write helper ' +
'functions)<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093; x = {-4, 11, 0, ' +
'-7};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; comb2(x) =&gt; {{0, 11, -7}, {-4, 0, 11}, {-7, 11, ' +
'-4}, {-4, -7, 0}}</span></div>';
		answerText[36] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>* int&#091;&#093;&#091;&#093; comb2 ' +
'(int&#091;&#093; x) {<br>*&nbsp;&nbsp;&nbsp;&nbsp; int n = x.length;<br>*&nbsp;&nbsp;&nbsp;&nbsp; int ' +
'k = 3;<br>*&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093;&#091;&#093; out = new int&#091;factorial(n) / ' +
'factorial(k) / factorial(n - k)&#093;&#091;k&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; int counter = ' +
'0;<br>*&nbsp;&nbsp;&nbsp;&nbsp; for (int a = 0; a &lt; (n - k + 1); a++) ' +
'{<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int b = (a + 1); b &lt; (n - k + 2); b++) ' +
'{<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int c = (b + 1); ' +
'c &lt; (n - k + 3); c++) ' +
'{<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'out&#091;counter&#093; = new int&#091;&#093; {x&#091;a&#093;, x&#091;b&#093;, ' +
'x&#091;c&#093;};<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'counter ++;<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>*&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>*&nbsp;&nbsp;&nbsp;&nbsp; return out;<br>* }<br>*<br>* int factorial(int n) ' +
'{<br>*&nbsp;&nbsp;&nbsp;&nbsp; if (n &lt; 2) return 1;<br>*&nbsp;&nbsp;&nbsp;&nbsp; return n * ' +
'factorial(n - 1);<br>* }</span></div>';
		feedbackText[36] = null;
		numberText[37] = '38.';
		questionText[37] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method to draw onto a JFrame a circle with ' +
'center (x,y) and radius r</span></div>';
		answerText[37] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer :<br>public void drawingCircle(graphics g, ' +
'double x, double y, double r) {<br>g.setColor(Color.BLACK);<br>g.drawOval(x - r/2 , y - r/2, r , ' +
'r);<br>}</span></div>';
		feedbackText[37] = null;
		numberText[38] = '39.';
		questionText[38] = '<div class=\'default\'><span style=\'font-size:12pt\'>What does the &#8220;static&#8221; keyword mean ? Can ' +
'you override private or static method in Java ?</span></div>';
		answerText[38] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:18pt\'><span style=\'font-size:12pt\'>The static ' +
'keyword denotes that a member variable or method can be accessed, without requiring an instantiation ' +
'of the class to which it belongs. A user cannot override <a ' +
'href=\'http://www.javacodegeeks.com/2012/05/java-static-methods-can-be-code-smell.html\'>static methods ' +
'in Java</a>, because method overriding is based upon dynamic binding at runtime and static methods ' +
'are statically binded at compile time. A static method is not associated with any instance of a class ' +
'so the concept is not applicable.</span></div></div>';
		feedbackText[38] = null;
		numberText[39] = '40.';
		questionText[39] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is wrong with the following if statement?<br>if ' +
'num1 =! 0{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Counter1 ++<br>else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'Counter1 ==counter1;<br>}</span></div>';
		answerText[39] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>If (num1 != ' +
'0){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Counter1 ++;<br>}<br>else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'Counter1=counter1;<br>}<br>1) Supposed to be != not =!<br>2) Brackets around if statement <br>3) Add ' +
'braces<br>4) Semicolon at end of counter1++<br>5) Not == supposed to be just = for last if ' +
'statement</span></div>';
		feedbackText[39] = null;
		numberText[40] = '41.';
		questionText[40] = '<div class=\'default\'><span style=\'font-size:12pt\'>A word is called <i>palindrome </i>if it is the same ' +
'forward and backwards, i.e. reflective.<br>Palindromes include <i>anna</i>, <i>civic</i>, ' +
'<i>level</i>, <i>racecar</i>, etc. Given a word (no spaces) <i>s</i>, write a<br>program that ' +
'determines if it is <i>palindrome</i>. Output true if it is a palindrome and false if it is ' +
'not.</span></div>';
		answerText[40] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Answer:<br>public static void main ' +
'(String&#091;&#093; args) {<br>Scanner in = new Scanner(System.in);<br>String word = ' +
'in.next();<br>String s = &quot;&quot;;<br>int highestIndex = 0;<br>int lowNum = s.length();<br>for ' +
'(int i = 0; i &lt; word.length(); i++) {<br>s = word.substring(0, i + 1);<br>if (isP(s)) ' +
'{<br>highestIndex = i;<br>}<br>}<br>lowNum = word.length() - highestIndex - 1;<br>for (int i = ' +
'word.length() - 1; i &gt;= 0; i--) {<br>s = word.substring(i);<br>if (isP(s)) {<br>if (i &lt; lowNum) ' +
'{<br>lowNum = i;<br>}<br>}<br>}<br>System.out.println(lowNum);<br>}<br>public static boolean isP ' +
'(String s) {<br>for (int i = 0; i &lt; (s.length() / 2); i++) {<br>if (s.charAt(i) != ' +
's.charAt(s.length() - i - 1)) {<br>return false;<br>}<br>}<br>return true;<br>}</span></div>';
		feedbackText[40] = null;
		numberText[41] = '42.';
		questionText[41] = '<div class=\'default\'><div style=\'margin-left:4pt\'><span style=\'font-size:12pt\'>Write a method called ' +
'<b><i>reverse</i></b> that takes in an integer array and reverses the order of the ' +
'elements.</span></div></div>';
		answerText[41] = '<div class=\'default\'><span style=\'font-size:12pt\'>public static void reverse (int&#091;&#093; a) ' +
'{<br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>for (int b = 0; b &lt; (a.length / ' +
'2); b++) {<br></span></div><div style=\'margin-left:36pt;text-indent:36pt\'><span style=\'font-size:12pt\'>int cur = a&#091;b&#093;;<br>a&#091;b&#093; ' +
'= a&#091;a.length - b - 1&#093;;<br>a&#091;a.length - b - 1&#093; = cur;<br></span></div><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>}<br></span></div><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		feedbackText[41] = null;
		numberText[42] = '43.';
		questionText[42] = '<div class=\'default\'><span class=\'font8\'><span style=\'font-size:12pt\'>Given the phrase &#8220;Lorem ' +
'ipsum,&#8221; write a method that returns the amount of occurrences the letter &#8220;m&#8221; shows ' +
'up in the phrase.</span></span></div>';
		answerText[42] = '<div class=\'default\'><span style=\'font-size:12pt\'>vary</span></div>';
		feedbackText[42] = null;
		numberText[43] = '44.';
		questionText[43] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of:<br>&nbsp;&nbsp;&nbsp; ' +
'int&#091;&#093; a = {1, 2, 3};<br>&nbsp;&nbsp;&nbsp; int&#091;&#093; b = a;<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.println(b&#091;a&#091;2&#093;&#093;);</span></div>';
		answerText[43] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>* Error, index out of bounds</span></div>';
		feedbackText[43] = null;
		numberText[44] = '45.';
		questionText[44] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write an instance method to multiply two fractions ' +
'together, and return the product.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>';
		answerText[44] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>public Fraction multiply(Fraction ' +
'b)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fraction product = new ' +
'Fraction();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Product.num = ' +
'this.num*b.num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Product.den = ' +
'this.num*b.num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'product;<br>}</span></div>';
		feedbackText[44] = null;
		numberText[45] = '46.';
		questionText[45] = '<div class=\'default\'><span style=\'font-size:12pt\'>**** Write a function to transpose a 2d ' +
'array<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093;&#091;&#093; x = {{1, 2}, {4, 5}, {10, ' +
'12}};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; transpose(x) =&gt; {{1, 4, 10}, {2, 5, ' +
'12}}</span></div>';
		answerText[45] = '<div class=\'default\'><span style=\'font-size:12pt\'>* int&#091;&#093;&#091;&#093; transpose ' +
'(int&#091;&#093;&#091;&#093; x) {<br>*&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093;&#091;&#093; out = new ' +
'int&#091;x.length&#093;&#091;x&#091;0&#093;.length&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; for (int i = ' +
'0; i &lt; x.length; i++)<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; ' +
'x&#091;0&#093;.length; ' +
'j++)<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'out&#091;j&#093;&#091;i&#093; = x&#091;i&#093;&#091;j&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'out;<br>* }</span></div>';
		feedbackText[45] = null;
		numberText[46] = '47.';
		questionText[46] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method, <b>cross</b>, that will organize and ' +
'print multiple instances of a character into a cross shape of defined length and width (length and ' +
'width are identical).<br><br>public static void cross(char filler, int length)</span></div>';
		answerText[46] = '<div class=\'default\'>vary</div>';
		feedbackText[46] = null;
		numberText[47] = '48.';
		questionText[47] = '<div class=\'default\'><span style=\'font-size:12pt\'>Explain the differences between an instance method and ' +
'a class method.<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>';
		answerText[47] = '<div class=\'default\'><span style=\'font-size:12pt\'>An instance method is a method which needs an instance ' +
'of a class to work. <br><br>A class method is a method that can be called without any instances. This ' +
'is a static method.</span></div>';
		feedbackText[47] = null;
		numberText[48] = '49.';
		questionText[48] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the following code if the input ' +
'is 7: <br>x = input.nextInt();<br>If ( x &lt; 4){<br>&nbsp; System.out.print(x*2 + 6 ' +
'-24);<br>}<br>else if (x &gt; 2){<br>&nbsp; System.out.print(x/6 * 6 + 2);<br>}<br>else if (x &gt;= ' +
'9){<br>&nbsp; System.out.print(4/2-3 % 3);<br>}<br>else{<br>&nbsp; System.out.print(5/2 + ' +
'9/3);<br>}</span></div>';
		answerText[48] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>9</span></div>';
		feedbackText[48] = null;
		numberText[49] = '50.';
		questionText[49] = '<div class=\'default\'><span style=\'font-size:12pt\'>Rewrite the following code without mistakes:<br>public ' +
'int randomNumber()<br>{<br>Random rnd = new Random&#091;&#093;<br>randomnumber = ' +
'rnd.nextInt(50)+1;<br>int Fred == randomnumber;<br>return Fred<br>}</span></div>';
		answerText[49] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>public int randomNumber()<br>{<br>Random rnd = ' +
'new Random();<br>int randomnumber = rnd.nextInt(50)+1;<br>int Fred = randomnumber;<br>return Fred ' +
';<br>}</span></div>';
		feedbackText[49] = null;
		numberText[50] = '51.';
		questionText[50] = '<div class=\'default\'><span style=\'font-size:12pt\'>Describe the difference between an instance method and ' +
'a class method.</span></div>';
		answerText[50] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>An instance method requires an object of a ' +
'class to be called, and this method usually affects the object. (string s; s.charAt().)<br>A class ' +
'method does not require an instance of a class to be called.&nbsp; (ex: ' +
'system.out.println();)</span></div>';
		feedbackText[50] = null;
		numberText[51] = '52.';
		questionText[51] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method to check if input String is ' +
'Palindrome?&nbsp; A Palindrome is the same word spelt forward and backward.&nbsp; ' +
'&#8220;MOM&#8221;</span></div>';
		answerText[51] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>Solution:<br></span></div><div ' +
'style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>private static boolean isPalindromeString(String ' +
'str) {<br></span></div><div style=\'margin-left:18pt\'><span style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'if (str == null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'false;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int length = ' +
'str.length();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(length / ' +
'2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; length / 2; i++) ' +
'{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (str.charAt(i) != ' +
'str.charAt(length - i - ' +
'1))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'return false;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>&nbsp;&nbsp;&nbsp; ' +
'}</span></div></div>';
		feedbackText[51] = null;
		numberText[52] = '53.';
		questionText[52] = '<div class=\'default\'><span style=\'font-size:12pt\'>Create a Car class which has the fields: model, make ' +
'and colour. Create a default constructor, non-default constructor, getters and setters, toString ' +
'method and an equals method.</span></div>';
		answerText[52] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Ans:<br>public class Car ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private String make;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private ' +
'String model;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private String ' +
'colour;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Car() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.make = &quot;&quot;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.model = &quot;&quot;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.colour = &quot;&quot;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Car(String make, String model, String colour) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.make = ' +
'make;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.model = ' +
'model;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.colour = ' +
'colour;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ' +
'setMake(String make) { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.make = ' +
'make; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ' +
'setModel(String model) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.model ' +
'= model;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ' +
'setColour(String colour) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'this.colour = colour;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'public String toString() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'&quot;This car is a &quot; + this.make + &quot; &quot; + this.model + &quot;of colour&nbsp; &quot; + ' +
'this.colour;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Boolean ' +
'equals(Car car2) {<br></span><div style=\'margin-left:36pt;text-indent:36pt\'><span style=\'font-size:12pt\'>return this.make.equals(car2.make) ' +
'&amp;&amp; this.model.equals(car2.model) &amp;&amp; ' +
'this.colour.equals(car2.colour);<br></span></div><span ' +
'style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}</span></div>';
		feedbackText[52] = null;
		numberText[53] = '54.';
		questionText[53] = '<div class=\'default\'><span style=\'font-size:12pt\'>List 2 differences between for loops and do ' +
'loops.</span></div>';
		answerText[53] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>? Do loops always have to run at least once, for ' +
'loops do not<br>? For loops have a fixed number of iterations, do loops will run until a condition is ' +
'met<br>? For loops create their own variable where do loops check an existing one</span></div>';
		feedbackText[53] = null;
		numberText[54] = '55.';
		questionText[54] = '<div class=\'default\'><span style=\'font-size:12pt\'>Consider the following class:<br></span><div ' +
'style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>public class IdentifyParts {<br>&nbsp;&nbsp;&nbsp; ' +
'public static int x = 7;<br>&nbsp;&nbsp;&nbsp; public int y = 3;<br>} <br></span></div><div ' +
'style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>a.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; What are the class ' +
'variables?<br></span></div><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>b.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'What are the instance variables?<br>c.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; What is the output from the ' +
'following code:<br></span></div><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>IdentifyParts ' +
'a = new IdentifyParts(); <br>IdentifyParts b = new IdentifyParts(); <br>a.y = 5; <br>b.y = 6; <br>a.x ' +
'= 1; <br>b.x = 2; <br>System.out.println(&quot;a.y = &quot; + a.y); <br>System.out.println(&quot;b.y ' +
'= &quot; + b.y); <br>System.out.println(&quot;a.x = &quot; + a.x); <br>System.out.println(&quot;b.x = ' +
'&quot; + b.x); <br>System.out.println(&quot;IdentifyParts.x = &quot; + ' +
'IdentifyParts.x);</span></div></div>';
		answerText[54] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>a Answer: x<br>b ' +
'Answer: y<br></span></div><span style=\'font-size:12pt\'>c&nbsp; Answer: Here is the ' +
'output:<br></span><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'> a.y = 5 <br> b.y = 6 <br> ' +
'a.x = 2 <br> b.x = 2<br> IdentifyParts.x = 2<br></span></div><div style=\'margin-left:54pt\'><span style=\'font-size:12pt\'>Because x is ' +
'defined as a public static int in the class IdentifyParts, every reference to x will have the value ' +
'that was last assigned because x is a static variable (and therefore a class variable) shared across ' +
'all instances of the class. That is, there is only one x: when the value of x changes in any instance ' +
'it affects the value of x for all instances of IdentifyParts.</span></div></div>';
		feedbackText[54] = null;
		numberText[55] = '56.';
		questionText[55] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a class method that will return the boolean value ' +
'&#8216;true&#8217; if an integer parameter is greater than 10, smaller than 30, and divisible by 2. ' +
'Try to make your code optimized!</span></div>';
		answerText[55] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: Looking for a condensed boolean method such ' +
'as:<br>public static boolean foo (int i) {<br>return (i &gt; 10 &amp;&amp; i &lt; 30 &amp;&amp; i % 2 ' +
'== 0);<br>}<br>rather than using if statements</span></div>';
		feedbackText[55] = null;
		numberText[56] = '57.';
		questionText[56] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Write a program that will ask the ' +
'user for a secret number until they enter it.</span></span></div>';
		answerText[56] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>int secretNumber = 3;<br>int userNum ' +
'= 0;<br><br>do <br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;What is the secret ' +
'number?&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; userNum = userInput.nextInt();<br>} while ' +
'(!(secretNumber == userNum));<br><br>System.out.println(&quot;You have correctly guessed the secret ' +
'number!&quot;);</span></span></div>';
		feedbackText[56] = null;
		numberText[57] = '58.';
		questionText[57] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the output if the input is 42:<br>x = ' +
'input.nextInt();<br>if ( x &lt; 2){<br> if (x + 2 == 43)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(x &#8211; 5 &lt; 31)<br>&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(x % 2 = 0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(32)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp; }<br>}<br>else if (x &gt; 56){<br>&nbsp; System.out.print(x/4 * 6 + ' +
'2);<br>}<br>else if (x &lt;= 54){<br>&nbsp; if (x + 2 == 44)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp; ' +
'if (x &#8211; 5 = 37)<br>&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(x % 2 = 1)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(x % ' +
'5)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(x % 7)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp; }<br>}<br>else{<br>&nbsp; System.out.print(5/2 + 9/3);<br>}</span></div>';
		answerText[57] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: 0</span></div>';
		feedbackText[57] = null;
		numberText[58] = '59.';
		questionText[58] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a class method heading that returns a Julian ' +
'value, and which passes in a String and long value.</span></div>';
		answerText[58] = '<div class=\'default\'><span style=\'font-size:12pt\'>vary</span></div>';
		feedbackText[58] = null;
		numberText[59] = '60.';
		questionText[59] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a piece of code that asks for and records the ' +
'percentage test results for 100 people</span></div>';
		answerText[59] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>Ans:<br>int result&#091;&#093; = new int ' +
'&#091;100&#093;;<br>Scanner userInput = new Scanner(System.in);<br>for(int i = 0; i &lt;= 99; ' +
'i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&#8220;what is the ' +
'percentage?&#8221;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result&#091;i&#093; = ' +
'userInput.nextInt();<br>}</span></div>';
		feedbackText[59] = null;
		numberText[60] = '61.';
		questionText[60] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method, <b>lcm</b>, that will return the lowest ' +
'common multiple of two integers.<br><br>public static int lcm(int a, int b)</span></div>';
		answerText[60] = '<div class=\'default\'>vary</div>';
		feedbackText[60] = null;
		numberText[61] = '62.';
		questionText[61] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the code, and give a bit of ' +
'justification:<br><br>public static void main(String args&#091;&#093;) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a = 2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b = ' +
'3;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; doNumbers(a, b);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(a + b);<br>}<br><br>public static void doNumbers(int a, int b) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a -= b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b = ' +
'0;<br>}</span></div>';
		answerText[61] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: 5, since the variables are passed by ' +
'value</span></div>';
		feedbackText[61] = null;
		numberText[62] = '63.';
		questionText[62] = '<div class=\'default\'><span style=\'font-size:12pt\'>The geometric mean is defined as the <i>nth </i>root of ' +
'the product of <i>n </i>integers. Write a method to determine the geometric mean of the elements in a ' +
'given string array.</span></div>';
		answerText[62] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>double findMean(int &#091;&#093; ' +
'array2){<br>double mean = 1;<br>for (int i = 0; i &lt;array2.length; i++){<br>mean = ' +
'mean*array2&#091;i&#093;;<br>}<br>mean = Math.pow(mean, 1/array2.length);<br>return ' +
'mean;<br>}</span></div>';
		feedbackText[62] = null;
		numberText[63] = '64.';
		questionText[63] = '<div class=\'default\'><span style=\'font-size:12pt\'>a = 0;<br>b = a;<br>b = 2;<br>a and b are both ' +
'instances of a class. What is the current value of a? Explain your answer.</span></div>';
		answerText[63] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: a = 2 &#8212; because a and b both point to the ' +
'same memory location, whatever value b has a<br>must also have</span></div>';
		feedbackText[63] = null;
		numberText[64] = '65.';
		questionText[64] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a piece of code that asks for two positive ' +
'integers and finds the remainder of the first number divided by the second number, without modulus ' +
'(%).</span></div>';
		answerText[64] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>ANS:<br>import java.util.Scanner; <br>Scanner ' +
'input = new Scanner (System.in);<br>int n1, n2, modNum;<br>System.out.println(&#8220;Please enter the ' +
'first number:&#8221;);<br>n1 = input.nextInt();<br>modNum = n1;<br>System.out.println(&#8220;Please ' +
'enter the second number:&#8221;);<br>n2 = input.nextInt();<br>do while (modNum &gt; n2) {<br>modNum ' +
'-= n2;<br>}<br>System.out.println(n1 + &#8220; mod &#8221; + n2 + &#8220; is equal to &#8221; + ' +
'modNum);</span></div>';
		feedbackText[64] = null;
		numberText[65] = '66.';
		questionText[65] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sarah needs to select a song from the Hamilton musical ' +
'to listen to. There are 46 songs in the<br>playlist. Write a method that allows her to select a ' +
'random song.</span></div>';
		answerText[65] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>public int randomSong()<br>{<br>Random rnd = ' +
'new Random();<br>int randomnumber = rnd.nextInt(46)+1;<br>int song = randomnumber;<br>return ' +
'song;<br>}</span></div>';
		feedbackText[65] = null;
		numberText[66] = '67.';
		questionText[66] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write boolean method evenDivide which checks if a ' +
'integer n1 is perfectly divisible by integer n2.</span></div>';
		answerText[66] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>public static Boolean evenDivide (int n1, int ' +
'n2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(n1%n2==0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else return false;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>}</span></div>';
		feedbackText[66] = null;
		numberText[67] = '68.';
		questionText[67] = '<div class=\'default\'><span style=\'font-size:12pt\'>Create a method which will randomly choose one of the ' +
'following colors:<br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'Red, 2) Blue, 3) Green</span></div></div>';
		answerText[67] = '<div class=\'default\'><span style=\'font-size:12pt\'><span style=\'color:#ff0000\'><br></span></span><div ' +
'style=\'margin-left:18pt\'><span style=\'font-size:12pt\'><span style=\'color:#ff0000\'>Inefficient ' +
'<br></span>public void displayColor{<br>Random randy = new Random(); <br>int print = ' +
'randy.nextInt(3)+1; <br>if (print == 1){<br>System.out.println(&#8220;Red&#8221;);<br>}<br>else if ' +
'(print ==2){<br>System.out.println(&#8220;Blue&#8221;);<br>}<br>else ' +
'{<br>System.out.println(&#8220;Green&#8221;);<br>}<br>}<br>Or<br><span ' +
'style=\'color:#ff0000\'>Efficient <br></span>public void displayColor{<br>Random randy = new Random(); ' +
'<br>int print = randy.nextInt(3)+1;<br>String&#091;&#093; color= {&#8220;Red&#8221; ' +
',&#8220;Blue&#8221;, &#8220;Green&#8221;}; <br>System.out.println( color&#091;print&#093;); ' +
'}</span></div></div>';
		feedbackText[67] = null;
		numberText[68] = '69.';
		questionText[68] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a line of code which identifies the number of ' +
'words in a sentence.</span></div>';
		answerText[68] = '<div class=\'default\'><span style=\'font-size:12pt\'><b>Write a line of code which identifies the number of ' +
'words in a sentence.<br></b><br><br>Scanner userinput = new Scanner(System.in);<br>int words = ' +
'1;<br>String sentence;<br>System.out.println(&quot;Enter some words&quot;);<br>sentence = ' +
'userinput.nextLine();<br>for (int i = 0; i &lt;= sentence.length() - 1; i++) {<br>if ' +
'(sentence.charAt(i) == &#039; &#039;) ' +
'{<br>words++;<br>}<br>}<br>System.out.println(words);</span></div>';
		feedbackText[68] = null;
		numberText[69] = '70.';
		questionText[69] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that will take in an integer array with ' +
'any number of elements. The method must select a RANDOM element from the array, PRINT it, and REMOVE ' +
'it from the array (create a new array). Continue this process until the array has one element left, ' +
'and RETURN that value.</span></div>';
		answerText[69] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: Goal is to see optimized code, potentially using ' +
'recursion (as shown below)<br>public int arrayProcess(int&#091;&#093; i) {<br>if (i.length == 1) // ' +
'check for one element left<br>return i&#091;0&#093;;<br>// recognize that it is more efficient to ' +
'omit the &#8216;else&#8217; term<br>int selector = (int) ((i.length - 1) * Math.random());<br>// ' +
'Select rnd element<br>System.out.println(i&#091;selector&#093;); // Display it<br>int&#091;&#093; i2 ' +
'= new Integer&#091;i.length - 1&#093;;<br>for (int x = 0; x &lt; i2.length; x ++) {<br>if (x &lt; ' +
'selector)<br>i2&#091;x&#093; = i&#091;x&#093;;<br>else if(x &gt; selector)<br>i2&#091;x&#093; = ' +
'i&#091;x-1&#093;;<br>// Proper algorithm for putting new values in without the old one<br>}return ' +
'arrayProcess(i2);<br>// RECURSION portion which shortens code; main point of the ' +
'question<br>}</span></div>';
		feedbackText[69] = null;
		numberText[70] = '71.';
		questionText[70] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the output of the following code?<br>String s = ' +
'&#8220;This is &#8221;;<br>int n = 2;<br>System.out.println(s+ (char) (&#8216;a&#8217;+n) + &#8220; ' +
'string&#8221;);</span></div>';
		answerText[70] = '<div class=\'default\'><span style=\'font-size:12pt\'>(Answer) This is c string</span></div>';
		feedbackText[70] = null;
		numberText[71] = '72.';
		questionText[71] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that asks the user to enter their top 3 ' +
'marks. The method will then calculate the average and if less than 75 print &#8220;Keep Going&#8221;, ' +
'76-89 print &#8220;Not bad&#8221;, and if 90-100 print &#8220;WOOO GOOD JOB&#8221;.</span></div>';
		answerText[71] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS<br></span><div ' +
'style=\'margin-left:36pt;text-indent:36pt\'><span style=\'font-size:12pt\'>Scanner userInput = new ' +
'Scanner(System.in);<br></span></div><span style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Please enter your first ' +
'mark&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int mark1 = ' +
'userInput.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Please enter your second mark&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int mark2 = userInput.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Please enter your third ' +
'mark&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int mark3 = ' +
'userInput.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ' +
'avg;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; avg = ' +
'((mark1+mark2+mark3)/3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Your average is &quot; + avg);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(avg &lt; 76)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Keep Trying, You&#039;ve Got ' +
'This!!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (avg &gt;= 76 &amp;&amp; ' +
'avg&lt;90)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Not Bad. Keep up the good work!!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (avg &gt; ' +
'90)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;WOOO GOOD JOB!!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(avg&gt;100)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;WE HAVE A ' +
'LIAR... LIAR LIAR PANTS ON FIRE!!!!!!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>';
		feedbackText[71] = null;
		numberText[72] = '73.';
		questionText[72] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that outputs the first ten Fibonacci ' +
'numbers using a for loop, using three integer variables only.</span></div>';
		answerText[72] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS:<br>int n1 = 0, n2 = 1, nFibb = 1;<br>for (int ' +
'count = 0; count &lt;= 10; count++)<br>{<br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>System.out.println(nFibb);<br></span></div><span ' +
'style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nFibb = n1 + n2;<br></span><span ' +
'style=\'font-size:12pt\'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n1 = n2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n2 = ' +
'nFibb;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br></span><span style=\'font-size:12pt\'>}</span></div>';
		feedbackText[72] = null;
		numberText[73] = '74.';
		questionText[73] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method heading that passes in a Rectangle, int, ' +
'double, and boolean value.</span></div>';
		answerText[73] = '<div class=\'default\'><span style=\'font-size:12pt\'>vary</span></div>';
		feedbackText[73] = null;
		numberText[74] = '75.';
		questionText[74] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>Correct the ' +
'following code segment<br></span></div><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>public static ' +
'void main(String&#091;&#093; ' +
'argv)<br>&#160;&#160;&#160;{<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Char x = &#8220;I LOVE ' +
'ICS&#8221;; ' +
'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(x); ' +
'&#160;<br>&#160;&#160;&#160;}</span></div></div>';
		answerText[74] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS<br>public static void main(String&#091;&#093; ' +
'argv)<br>&#160;&#160;&#160;{<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<b>String </b>x = &quot;I ' +
'LOVE ICS&quot;; ' +
'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(x);<br>&#160;&#160;&#160;&#160;}</span></div>';
		feedbackText[74] = null;
		numberText[75] = '76.';
		questionText[75] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the following code<br>int x = ' +
'43;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>int y = 3/2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp; if (Math.pow((x%15)/3, y) &gt;= 12){<br>&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  System.out.println(&quot;Yes&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; else{<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ' +
'System.out.println(&quot;No&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp; }</span></div>';
		answerText[75] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>No<br><br>43 mod 15 is 13. Integer division ' +
'13 by 3 equals 4. 4 to the 3/2 power is 8. Can also be written as root 4 (2) to third power (8). This ' +
'is less than 12 so output is No.</span></div>';
		feedbackText[75] = null;
		numberText[76] = '77.';
		questionText[76] = '<div class=\'default\'><span style=\'font-size:12pt\'>Given the class <br>public class NumberHolder ' +
'{<br>&nbsp;&nbsp;&nbsp; public int anInt;<br>&nbsp;&nbsp;&nbsp; public float aFloat;<br>}<br>a) ' +
'Create an instance of this class<br>b) Initialize its two member variables<br>c) Display the value of ' +
'each variable</span></div>';
		answerText[76] = '<div class=\'default\'><span class=\'font3\'><span style=\'font-size:12pt\'>a) NumberHolder numHolder = new ' +
'NumberHolder();<br>b) numHolder.anInt = 2;<br>numHolder.aFloat = 5;<br>c) ' +
'System.out.println(numHolder.anInt + &quot; &quot; + numHolder.aFloat);</span></span></div>';
		feedbackText[76] = null;
		numberText[77] = '78.';
		questionText[77] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that can determine, when two times are ' +
'given in ##:##AM or ##:##PM form, which time has occurred earlier. Output &#8220;FIRST&#8221; if the ' +
'first time occurs earlier and output &#8220;SECOND&#8221; if the second time occurs earlier, assuming ' +
'that the two given times are different.<br>CLARIFICATION: 12:00AM (midnight) occurs before 12:00PM ' +
'(noon).<br>Example - input: 12:03AM 09:03PM output: FIRST</span></div>';
		answerText[77] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Answer:<br>public static void main ' +
'(String&#091;&#093; args) {<br>Scanner in = new Scanner(System.in);<br>String t1 = ' +
'in.next();<br>String t2 = in.next();<br>int tOne = 0;<br>int tTwo = 0;<br>tOne += ' +
'Integer.parseInt(t1.substring(0, 2)) * 100 + Integer.parseInt(t1.substring(3, 5));<br>tTwo += ' +
'Integer.parseInt(t2.substring(0, 2)) * 100 + Integer.parseInt(t2.substring(3, 5));<br>if ' +
'(t1.charAt(5) == &#039;P&#039;) {<br>tOne += 1200;<br>}<br>if (t2.charAt(5) == &#039;P&#039;) ' +
'{<br>tTwo += 1200;<br>}<br>if (t1.substring(0, 2).equals(&quot;12&quot;)) {<br>tOne -= ' +
'1200;<br>}<br>if (t2.substring(0, 2).equals(&quot;12&quot;)) {<br>tTwo -= 1200;<br>}<br>if (tOne &lt; ' +
'tTwo) {<br>System.out.println(&quot;FIRST&quot;);<br>} else ' +
'{<br>System.out.println(&quot;SECOND&quot;);<br>}<br>}</span></div>';
		feedbackText[77] = null;
		numberText[78] = '79.';
		questionText[78] = '<div class=\'default\'><span style=\'font-size:12pt\'>Code a class variable called &#8220;myVar&#8221; that ' +
'cannot be modified without the use of a mutator method. When would you use such a ' +
'variable?</span></div>';
		answerText[78] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: private int myVar = 0; &#8212; to prevent the ' +
'variable from being modified in other parts of the code</span></div>';
		feedbackText[78] = null;
		numberText[79] = '80.';
		questionText[79] = '<div class=\'default\'><span style=\'font-size:12pt\'>for (x = 0; x &gt; 10; x++) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (x % 2 = 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(x);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}<br>List 3 flaws in this code if it is ' +
'supposed to print &#8220; 0246810 &#8221;</span></div>';
		answerText[79] = '<div class=\'default\'><span style=\'font-size:12pt\'>? &gt; should be replaced with &lt;<br>? If statement ' +
'needs ==<br>? Need to add data type for variable x</span></div>';
		feedbackText[79] = null;
		numberText[80] = '81.';
		questionText[80] = '<div class=\'default\'><span style=\'font-size:12pt\'>If int&#091;&#093; a = new int&#091;&#093; {1, 2, 3} ' +
'and int&#091;&#093; b = new int&#091;&#093; {1, 2, 3} , explain whether a == b will return true or ' +
'false, why and, if false, a better way to compare both arrays.</span></div>';
		answerText[80] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'>The expression ' +
'a == b will return false since a and b are pointers to a memory address. Since a and b point to ' +
'different memory addresses, even though the values at those addresses are equal, the equal to (==) ' +
'operand will compare the addresses and determine they are not equal. To determine of the values in an ' +
'array are equal a for loop would be required to scan through all the values in an array as shown in ' +
'the following snippet of code:<br></span></div><span style=\'font-size:12pt\'>boolean equal = true;<br>if ' +
'(a.length != b.length) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; equal = false;<br>}<br>for (int c = 0; c ' +
'&lt; a.length; c++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (a&#091;c&#093; != b&#091;c&#093;) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; equal = ' +
'false;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}</span></div>';
		feedbackText[80] = null;
		numberText[81] = '82.';
		questionText[81] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write three overloaded methods that will:<br>a. Print ' +
'all integers from 1 to 1000, identifying each as either composite or prime..<br>b. Print all ' +
'multiples of a certain integer from 1 to 1000.<br>c. Print all multiples of a certain integer within ' +
'a set range. An invalid range should be treated appropriately.<br><br>public static void ' +
'listMulti()<br><br>public static void listMulti(int check)<br><br>public static void listMulti(int ' +
'check, int min, int max)</span></div>';
		answerText[81] = '<div class=\'default\'>vary</div>';
		feedbackText[81] = null;
		numberText[82] = '83.';
		questionText[82] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the code, and give a bit of ' +
'justification:<br><br>class NumberHolder {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ' +
'value;<br>}<br><br>public class Project {<br><br>public static void main(String args&#091;&#093;) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NumberHolder n = new ' +
'NumberHolder();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n.value = ' +
'7;doNumbers(n);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(n.value);<br>}<br>public static ' +
'void doNumbers(NumberHolder a) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.value *= ' +
'2;<br>}<br>}</span></div>';
		answerText[82] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: 14, since the object is passed as a reference to ' +
'the memory location, so the value is doubled</span></div>';
		feedbackText[82] = null;
		numberText[83] = '84.';
		questionText[83] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write the piece of code that forces a user to enter a ' +
'password until they get it right.</span></div>';
		answerText[83] = '<div class=\'default\'><span style=\'font-size:14pt\'><span style=\'color:#222222\'>import java.util.Scanner;<br>Scanner ' +
'user_input = new Scanner(System.in);<br>do {<br>System.out.println(&quot;Enter ' +
'password&quot;);<br>}while (user_input.nextLine()!= &quot;password&quot;);</span></span></div>';
		feedbackText[83] = null;
		numberText[84] = '85.';
		questionText[84] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write the code to print just the second letter of this ' +
'string.<br>String cde = &quot;cde&quot;;</span></div>';
		answerText[84] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS<br>String cde = &quot;cde&quot;;<br>String d= ' +
'cde.substring(2,3);</span></div>';
		feedbackText[84] = null;
		numberText[85] = '86.';
		questionText[85] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a single Java statement to print out the ' +
'following:<br><br>According to everyone: <br>&quot;Karim is good at ICS&quot;!</span></div>';
		answerText[85] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>System.out.println(&quot;According to ' +
'everyone:\\n\\&quot;Karim is good at ICS\\&quot;!&quot;);<br><br>Begin normal System.out.println and write ' +
'According to everyone: quotation. o make new line use \\n function. To make quotations without ' +
'finishing sentence fragment, use\\ to separate. Finish with exclamation mark and proper quotation to ' +
'end the fragment.</span></div>';
		feedbackText[85] = null;
		numberText[86] = '87.';
		questionText[86] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write, using methods, code that will calculate the ' +
'intrest for 10 years, at 2% compounded monthly as inserted by the user.</span></div>';
		answerText[86] = '<div class=\'default\'><span style=\'font-size:12pt\'>vary</span></div>';
		feedbackText[86] = null;
		numberText[87] = '88.';
		questionText[87] = '<div class=\'default\'><span style=\'font-size:12pt\'>Transform the following do while loop to a for ' +
'loop:<br><br>int n1 = 0, sum = 0;<br>do {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n1 += ' +
'2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += n1;<br>} while (sum &lt;= ' +
'12);<br>System.out.println(&#8220;Sum:&nbsp; &#8221; + sum);</span></div>';
		answerText[87] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS:&nbsp; <br>int n1 = 0, sum = 0;<br>for (int count = ' +
'0; count &lt;= 3; count++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n1 += ' +
'2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += n1; <br>}<br>System.out.println(&#8220;Sum:&nbsp; &#8221; ' +
'+ sum);</span></div>';
		feedbackText[87] = null;
		numberText[88] = '89.';
		questionText[88] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the output of this code:<br>int i = ' +
'256;<br>while (i % 2 == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i / 2;<br>}</span></div>';
		answerText[88] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer: 256<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; ' +
'128<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 64<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; ' +
'32<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 16<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; ' +
'8<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 4<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; ' +
'2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1</span></div>';
		feedbackText[88] = null;
		numberText[89] = '90.';
		questionText[89] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a dynamic array <i>g </i>that stores the grades ' +
'of the class (the number of students <i>n </i>is not given - prompt user to enter the next ' +
'student&#8217;s grade and terminate when a negative grade is entered). Hint: dynamic array = the ' +
'array must be able to increase its length.</span></div>';
		answerText[89] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Answer:<br>public static void main ' +
'(String&#091;&#093; args) {<br>Scanner in = new Scanner(System.in);<br>int g&#091;&#093; = new ' +
'int&#091;0&#093;;<br>int tempG&#091;&#093;;<br>int n = 0;<br>int newG = in.nextInt();<br>while (newG ' +
'&gt;= 0) {<br>n++;<br>tempG = Arrays.copyOf(g, n);<br>tempG&#091;n - 1&#093; = newG;<br>g = ' +
'tempG;<br>newG = in.nextInt();<br>}<br>}</span></div>';
		feedbackText[89] = null;
		numberText[90] = '91.';
		questionText[90] = '<div class=\'default\'><span style=\'font-size:12pt\'>Create an Account class which will represent a ' +
'person&#8217;s bank account. It should have the fields of name and balance. It should have methods ' +
'deposit, withdraw and showInformation. Finally, instantiate the class and use the methods. The ' +
'program should prompt the user for their name and balance. Then 4 choices are provided: show ' +
'information, deposit, withdraw or exit. The withdrawn amount cannot be greater than the ' +
'balance.</span></div>';
		answerText[90] = '<div class=\'default\'><span style=\'font-size:12pt\'>Sample Ans:<br>public class Account ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private String name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private ' +
'double balance;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Account(String name, double balance) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.name = ' +
'name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.balance = ' +
'balance;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String ' +
'showInformation() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'&quot;NAME: &quot; + this.name + &quot;\\nBALANCE: $&quot; + ' +
'this.balance;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ' +
'deposit(double deposit) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(deposit &lt; 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;You cannot deposit a negative ' +
'amount!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'deposit = Math.round(deposit * 100) / 100.0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.balance += ' +
'deposit;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Deposit ' +
'successful.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ' +
'withdraw(double withdraw) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(withdraw &lt; 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;You cannot withdraw a negative ' +
'amount!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else if (withdraw ' +
'&gt; this.balance) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;You cannot withdraw more than what you ' +
'have!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'this.balance -= withdraw;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Withdrawal ' +
'successful.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void ' +
'main(String&#091;&#093; args) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'Scanner scan = new Scanner(System.in);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Enter your name and ' +
'balance.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String name = ' +
'scan.nextLine();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int balance = ' +
'0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (true) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; balance = scan.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ' +
'(balance &lt; 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw ' +
'new Exception();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception e) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Enter a non-negative number!&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'Account account = new Account(name, balance);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (true) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;You have 4 ' +
'choices:&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;1 - Show ' +
'Information&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;2 - Make ' +
'Deposit&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;3 - Make ' +
'Withdrawal&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;4 - ' +
'Exit&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int entry = ' +
'scan.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (entry &lt; 1 || entry &gt; 4) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ' +
'Exception();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch ' +
'(entry) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case ' +
'1:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(account.showInformation());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case ' +
'2:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Enter deposit ' +
'amount.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'account.deposit(scan.nextDouble());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case ' +
'3:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Enter ' +
'withdrawal amount.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'account.withdraw(scan.nextDouble());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;System terminating...&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } ' +
'catch (Exception e) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;Entry error! ' +
'Terminating...&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.exit(1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}</span></div>';
		feedbackText[90] = null;
		numberText[91] = '92.';
		questionText[91] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that will calculate the total price (tax ' +
'included) of a given item, when user enters subtotal. (13% tax only)</span></div>';
		answerText[91] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Scanner userInput = new ' +
'Scanner(System.in);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&quot;Please enter a subtotal&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int subTot = userInput.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ' +
'tax = (int) (0.13*subTot);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int total ' +
'= subTot + tax;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(total);</span></div>';
		feedbackText[91] = null;
		numberText[92] = '93.';
		questionText[92] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a constructor method for a rectangle, include ' +
'height and width as integers.</span></div>';
		answerText[92] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>public rectangle(int rHeight, int ' +
'rWidth)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int height = ' +
'rHeight;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int width = rWidth;<br>}</span></div>';
		feedbackText[92] = null;
		numberText[93] = '94.';
		questionText[93] = '<div class=\'default\'><span style=\'font-size:12pt\'>Phoebe has to make up random sentences about the ' +
'weather. Write a method that randomly<br>selects a question from a list.<br>Output ' +
'sentences:<br>&#8220;It&#8217;s going to be rainy today.&#8221;<br>&#8220;It&#8217;s going to snow ' +
'today.&#8221;<br>&#8220;It&#8217;s going to be sunny today.&#8221;</span></div>';
		answerText[93] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans :<br>public String pickSentence()<br>{<br>Random ' +
'rnd = new Random ();<br>int randomnumber = rnd.nextInt(3)+1;<br>if(randomnumber == 1){<br>return ' +
'&quot;It&#039;s going to be rainy today&quot;;<br>}<br>else if (randomnumber == 2){<br>return ' +
'&quot;It&#039;s going to snow today.&quot;;<br>}<br>else {<br>return &quot;It&#039;s going to be ' +
'sunny today&quot;;<br>}<br>}</span></div>';
		feedbackText[93] = null;
		numberText[94] = '95.';
		questionText[94] = '<div class=\'default\'><span style=\'font-size:12pt\'> Write a function to append two int lists ' +
'together.&nbsp; For example:<br><br>int&#091;&#093; x = {4, 6, 8}; <br>int&#091;&#093; y = {-1, -3, ' +
'-5};<br>concat(x, y) =&gt; {4, 6, 8, -1, -3, -5}</span></div>';
		answerText[94] = '<div class=\'default\'><span style=\'font-size:12pt\'>* int&#091;&#093; concat (int&#091;&#093; x, ' +
'int&#091;&#093; y) {<br>*&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093; out = new int&#091;x.length + ' +
'y.length&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; x.length; i++) out&#091;i&#093; = ' +
'x&#091;i&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; y.length; i++) out&#091;i + ' +
'x.length&#093; = y&#091;i&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; return out;<br>* }</span></div>';
		feedbackText[94] = null;
		numberText[95] = '96.';
		questionText[95] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a code fragment that returns &#8220;tee are ai ' +
'am&#8221; using a predefined string s, where s = &#8221;&nbsp;&nbsp; Tee Are Ai Am&nbsp;&nbsp; ' +
'&#8221;.</span></div>';
		answerText[95] = '<div class=\'default\'><span style=\'font-size:12pt\'>(Answer) s.toLowerCase().trim()</span></div>';
		feedbackText[95] = null;
		numberText[96] = '97.';
		questionText[96] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a for loop that will print the factors of a given ' +
'integer x<br>Ex. x = 12 would print &#8220;1 2 3 4 6 12 &#8221;</span></div>';
		answerText[96] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS<br>for (int y = 1; y &lt;= x; y++) {<br>if ( x % y ' +
'== 0) {<br>System.out.print(&#8220;x &#8221;);<br>}<br>}</span></div>';
		feedbackText[96] = null;
		numberText[97] = '98.';
		questionText[97] = '<div class=\'default\'><span style=\'font-size:12pt\'>Why would someone want to use methods?</span></div>';
		answerText[97] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>Break the problem into smaller ' +
'pieces<br><br>They can be reused<br><br>Multiple programmers can work on the same ' +
'project</span></div>';
		feedbackText[97] = null;
		numberText[98] = '99.';
		questionText[98] = '<div class=\'default\'><span style=\'font-size:12pt\'>The ternary numeral system only uses the digits 0, 1, ' +
'and 2. Each digit represents a multiple of a power of three. For example, 102 in ternary represents ' +
'2*3 0 +0*3 1 +1*3 2 = 11. Given an integer array containing the digits of a ternary number, write a ' +
'method to convert it into a decimal number(e.g, such that {1, 0, 2} is converted to ' +
'11).</span></div>';
		answerText[98] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>int convertTernary(int &#091;&#093; ' +
'array4){<br>int num = 0;<br>for (int i = 0; i&lt;array4.length; i++){<br>num = num + ' +
'array4&#091;i&#093;*Math.pow(3, i);<br>}<br>return num;<br>}</span></div>';
		feedbackText[98] = null;
		numberText[99] = '100.';
		questionText[99] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a Boolean method called &#8220;checking&#8221; ' +
'which has two integer parameters. The method should check true if the denominator is greater than the ' +
'numerator, and checks false if the denominator is less the numerator.</span></div>';
		answerText[99] = '<div class=\'default\'><span style=\'font-size:12pt\'><span style=\'color:#ff0000\'>Answer<br></span>public ' +
'boolean checking (int numerator, int denominator){<br>if (numerator &lt; denominator){<br>return ' +
'true;<br>}<br>else { <br>return false;<br>}}</span></div>';
		feedbackText[99] = null;
		numberText[100] = '101.';
		questionText[100] = '<div class=\'default\'><span style=\'font-size:12pt\'>**** Write a function to convert a 1d array into a 2d ' +
'array with given dimensions<br>&nbsp;&nbsp; (empty values should be converted to ' +
'-1)<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093; x = {1, 2, 3, 4, 5, 6, ' +
'7};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int width = 4; int height = ' +
'2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; convert2d(x, width, height) =&gt; {{1, 2, 3, 4}, {5, ' +
'6, 7, -1}}</span></div>';
		answerText[100] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>* int&#091;&#093;&#091;&#093; convert2d ' +
'(int&#091;&#093; x, int width, int height) {<br>*&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093;&#091;&#093; ' +
'out = new int&#091;height&#093;&#091;width&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; ' +
'height; i++)<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; width; j++) ' +
'{<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'out&#091;i&#093;&#091;j&#093; = ' +
'-1;<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((i * height + j) ' +
'&lt; x.length)<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'out&#091;i&#093;&#091;j&#093; = x&#091;i * height + ' +
'j&#093;;<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>*&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'out;<br>* }</span></div>';
		feedbackText[100] = null;
		numberText[101] = '102.';
		questionText[101] = '<div class=\'default\'><span style=\'font-size:12pt\'>When the following code fragment is run it returns an ' +
'error. Is it a syntax or logic error?&nbsp; Correct the issue.<br><br>String name = &quot;Do or do ' +
'not, there is no ' +
'try.&quot;;<br>System.out.println(name.substring(name.indexOf(o,2).length()));</span></div>';
		answerText[101] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>ANS: The o in the arguments for the method indexOf ' +
'requires single quotation marks -- syntax error<br>surrounding it because it is a character.<br>--- ' +
'name.substring(name.indexOf(&#8216;o&#8217;,2).length());</span></div>';
		feedbackText[101] = null;
		numberText[102] = '103.';
		questionText[102] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method to determine the longest element in a ' +
'string array.</span></div>';
		answerText[102] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>String findLongest(String &#091;&#093; ' +
'array1){<br>String longest = array1&#091;0&#093;;<br>for (int i = 1; i&lt;array1.length; i++){<br>If ' +
'(longest.length &lt; array1&#091;i&#093;.length){<br>longest = ' +
'array1&#091;i&#093;;<br>}<br>}<br>return longest;<br>}</span></div>';
		feedbackText[102] = null;
		numberText[103] = '104.';
		questionText[103] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write the code that will prompt the user to continue to ' +
'enter values until the number entered is below 0 or above 1000:</span></div>';
		answerText[103] = '<div class=\'default\'><span style=\'font-size:12pt\'>Scanner user_input = new Scanner(System.in);<br>int x = ' +
'0;<br>do {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = user_input.nextInt();<br>} while (x &gt;= 0 ' +
'&amp;&amp; x &lt;= 1000)</span></div>';
		feedbackText[103] = null;
		numberText[104] = '105.';
		questionText[104] = '<div class=\'default\'><span style=\'font-size:12pt\'>Import java.util.Scanner<br>Scanner input = new ' +
'Scanner(System.in);<br>Write the code that will determine if a number is even?</span></div>';
		answerText[104] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: <br>If (input % 2 = 0){<br>&nbsp; ' +
'System.out.println(&#8220;even&#8221;);<br>}<br>Else{<br>&nbsp; ' +
'System.out.println(&#8220;odd&#8221;);<br>}</span></div>';
		feedbackText[104] = null;
		numberText[105] = '106.';
		questionText[105] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the following code ' +
'fragment.<br>String cat = &quot;tuna can&quot;;<br>String dog = &quot;beef ' +
'cat&quot;;<br>System.out.println(cat.length()==dog.length());</span></div>';
		answerText[105] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS: true - they have the same length and ' +
'System.out.print.. Converts the output to a<br>string</span></div>';
		feedbackText[105] = null;
		numberText[106] = '107.';
		questionText[106] = '<div class=\'default\'><span style=\'font-size:12pt\'>Strings are immutable objects. Explain, using an ' +
'example, whether it is possible to change the value a string refers to.</span></div>';
		answerText[106] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: Although there are no mutator methods in the ' +
'String class, it is possible to change the<br>value of a string variable by referencing another ' +
'string.<br>Example:<br>String abacus = &#8220;abacus&#8221;;<br>abacus = ' +
'&#8220;calculator&#8221;;<br>System.out.println(abacus);<br>This fragment prints ' +
'&#8216;calculator&#8217; - abacus now references &#8220;calculator&#8221; instead of ' +
'&#8220;abacus.&#8221;</span></div>';
		feedbackText[106] = null;
		numberText[107] = '108.';
		questionText[107] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that asks for a string and a character ' +
'from the user. The program will then return how many times the character is found within the ' +
'string</span></div>';
		answerText[107] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>Ans:<br>int count = 0;<br>char ' +
'userChar;<br>String userString;<br>scanner userInput = new Scanner(System.in);<br>userChar = ' +
'userInput.nextChar();<br>userString = userInput.nextLine();<br>for(i = 0; i &lt; userString.length(); ' +
'i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (userString.charAt(i) == ' +
'userChar){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count ++;<br></span><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>}<br></span></div><span ' +
'style=\'font-size:12pt\'>}<br>System.out.println(count);</span></div>';
		feedbackText[107] = null;
		numberText[108] = '109.';
		questionText[108] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is Function Overriding and Overloading in Java ' +
'?</span></div>';
		answerText[108] = '<div class=\'default\'><span style=\'font-size:12pt\'>Method overloading in Java occurs when two or more ' +
'methods in the same class have the exact same name, but different parameters. On the other hand, ' +
'method overriding is defined as the case when a child class redefines the same method as a parent ' +
'class. Overridden methods must have the same name, argument list, and return type. The overriding ' +
'method may not limit the access of the method it overrides.</span></div>';
		feedbackText[108] = null;
		numberText[109] = '110.';
		questionText[109] = '<div class=\'default\'><span style=\'font-size:12pt\'>Find three changes that could be made to the second ' +
'definition of billyBobJoe to ensure valid<br>overloading.<br><br>public static void billyBobJoe(int ' +
'a, String msg) {<br>**some cool code goes here**<br>}<br>public static String billyBobJoe(int init, ' +
'String returnValue) {<br>**more cool code goes here**<br>}</span></div>';
		answerText[109] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: Answers may include<br>- Change the order of ' +
'parameters ex. put String returnValue first<br>- Change the data type of the parameters ex. change ' +
'String to boolean<br>- Change the number of parameters ex. add int b to the parameter list<br>DO NOT ' +
'accept changing return type</span></div>';
		feedbackText[109] = null;
		numberText[110] = '111.';
		questionText[110] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method to determine the indexes of all the ' +
'a&#8217;s (lowercase and uppercase) in a given<br>string.</span></div>';
		answerText[110] = '<div class=\'default\'><span style=\'font-size:12pt\'>int&#091;&#093; findA(String s){<br>int x = 0;<br>for ' +
'(int i = 0; i&lt;s.length(); i++){<br>if (s.charAt(i) == &#8216;a&#8217;){<br>x = ' +
'x+1;<br>}<br>}<br>int &#091;&#093; index = new int&#091;x&#093;;<br>int y = 0;<br>for (int i = 0; ' +
'i&lt;s.length(); i++){<br>if (s.charAt(i) == &#8216;a&#8217;){<br>index&#091;y&#093; = i;<br>y = ' +
'y+1;<br>}<br>}<br>return index;<br>}</span></div>';
		feedbackText[110] = null;
		numberText[111] = '112.';
		questionText[111] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the difference between equals() method and == ' +
'operator?</span></div>';
		answerText[111] = '<div class=\'default\'><span style=\'font-size:12pt\'><br></span><div style=\'margin-left:36pt\'><span style=\'font-size:12pt\'><a ' +
'href=\'http://javarevisited.blogspot.ca/2012/12/difference-between-equals-method-and-equality-operator-java.html\'>http://javarevisited.blogspot.ca/2012/12/difference-between-equals-method-and-eq</a></span></div></div>';
		feedbackText[111] = null;
		numberText[112] = '113.';
		questionText[112] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a class that defines a card (add a variable for ' +
'suit and a variable for value) and add a constructor method with parameters of s (for suit) and val ' +
'(for value).</span></div>';
		answerText[112] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: class card{<br>String suit;<br>char ' +
'value;<br>public card(String s, char val){<br>suit = s;<br>value = val;<br>}<br>}</span></div>';
		feedbackText[112] = null;
		numberText[113] = '114.';
		questionText[113] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that takes in 3 numbers and prints them ' +
'smallest to largest.</span></div>';
		answerText[113] = '<div class=\'default\'><span style=\'font-size:12pt\'>Import java.util.arrays;<br><br>order(5,7,9)<br><br>Public ' +
'static void order(int a, int b, int c) {<br>Int num&#091;&#093; = {a, b, ' +
'c}<br>Arrays.sort(num);<br>System.out.println(num&#091;0&#093;, num&#091;1&#093;, ' +
'num&#091;2&#093;);<br>}</span></div>';
		feedbackText[113] = null;
		numberText[114] = '115.';
		questionText[114] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Give an example of an infinite loop ' +
'and explain the problems they cause.</span></span></div>';
		answerText[114] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>int x = 1;<br><br>do<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'x++;<br>} while (x &lt; 0);<br><br>An infinite loop is a loop that never ends because it never meets ' +
'its terminating condition or doesn&#8217;t have one. In older computers, they used to cause the whole ' +
'system to crash however now they can be terminated by the user. Infinite loops can take up all the ' +
'available processing time of your computer.</span></span></div>';
		feedbackText[114] = null;
		numberText[115] = '116.';
		questionText[115] = '<div class=\'default\'><span style=\'font-size:12pt\'>Fix the code:<br>input = nextint;<br>Boolean Integer = ' +
'5;<br>integer = input;<br>If ( integer &lt; 4){<br>&nbsp; System.out.print(x*2 + 6 -24);<br>}<br>else ' +
'if (integer &gt; 2){<br>&nbsp; System.out.print&#091;x/6 * 6 + 2&#093;;<br>}<br>else if (integer ' +
'&gt;= 9){<br>&nbsp; System.out.print(4/2-3 % 3)<br>}<br>else{<br>&nbsp; System.out.print{5/2 + ' +
'9/3};<br>}</span></div>';
		answerText[115] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>input = <b>nextInt();</b><br>Boolean ' +
'<b>numb</b>;<br><b>numb</b> = input;<br>If ( <b>numb</b> &lt; 4){<br>&nbsp; System.out.print(x*2 + 6 ' +
'-24);<br>}<br>else if (<b>numb</b> &gt; 2){<br>&nbsp; System.out.print<b>(</b>x/6 * 6 + ' +
'2<b>)</b>;<br>}<br>else if (<b>numb</b> &gt;= 9){<br>&nbsp; System.out.print(4/2-3 % ' +
'3)<b>;</b><br>}<br>else{<br>&nbsp; System.out.print<b>(</b>5/2 + 9/3<b>)</b>;<br></span><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		feedbackText[115] = null;
		numberText[116] = '117.';
		questionText[116] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a for loop that will print out all the even ' +
'numbers between 2 user inputted numbers:</span></div>';
		answerText[116] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br>int x = user_input.nextInt();<br>int y = ' +
'user_input.nextInt();<br>for (int i = x; i &lt;= y; i += 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (x ' +
'% 2 == 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br></span><div ' +
'style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>}<br>System.out.println(i);<br></span></div><span ' +
'style=\'font-size:12pt\'>}</span></div>';
		feedbackText[116] = null;
		numberText[117] = '118.';
		questionText[117] = '<div class=\'default\'><span style=\'font-size:12pt\'>Indicate the output of the following statement: ' +
'System.out.println(&#8220;What exactly is &#8221; + &#8220;this \\&#8221;code\\&#8221; actually &#8221; + ' +
'<br>&#8220;trying \\n to tell&#8221; + &#8220;you?&#8221;)?</span></div>';
		answerText[117] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>What exactly is this &#8220;code&#8221; ' +
'actually trying<br>to tellyou?</span></div>';
		feedbackText[117] = null;
		numberText[118] = '119.';
		questionText[118] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that converts from seconds to hours, ' +
'minutes, and seconds. For example, an input of 4000 seconds would print &#8220;1 hour, 6 minutes, 40 ' +
'seconds&#8221;.&nbsp; Still print 0 if there are 0 hours, minutes, or seconds. Also, print the ' +
'singular and plural form accordingly (do not print 1 seconds). (input is the number of seconds as a ' +
'positive integer)</span></div>';
		answerText[118] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer:<br><br>Scanner in = new Scanner;<br><br>int ' +
'input = in.nextInt();<br><br>int placeholder = input;<br><br>int hours = placeholder / ' +
'3600;<br>placeholder = placeholder % 3600;<br>int minutes = placeholder / 60;<br>int seconds = ' +
'placeholder % 60;<br><br>System.out.print(hours + &#8220; hour&#8221;);<br>if (hours != 1) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&#8220;s&#8221;);<br>}<br>System.out.print(&#8220;, ' +
'&#8221;);<br><br>System.out.print(minutes + &#8220; minute&#8221;);<br>if (minutes != 1) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&#8220;s&#8221;);<br>}<br>System.out.print(&#8220;, and ' +
'&#8221;);<br><br>System.out.print(seconds + &#8220; second&#8221;);<br>if (seconds != 1) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&#8220;s&#8221;);<br>}<br>System.out.print(&#8220;\\n&#8221;);</span></div>';
		feedbackText[118] = null;
		numberText[119] = '120.';
		questionText[119] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a program that asks the user to guess the number ' +
'held by variable integer &#8220;answer&#8221;</span></div>';
		answerText[119] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>Scanner userInput = new ' +
'Scanner(System.in);<br>int guess;<br>do{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(&#8220;What is your guess?&#8221;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; guess = ' +
'userInput.nextInt();<br>}while (guess != answer);</span></div>';
		feedbackText[119] = null;
		numberText[120] = '121.';
		questionText[120] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Write two different methods that will ' +
'calculate the sum of the integers 0 to 100, each methods should use a different type of ' +
'loop.</span></span></div>';
		answerText[120] = '<div class=\'default\'><span class=\'font6\'><span style=\'font-size:12pt\'>Using For Loops:<br>int sum = ' +
'0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>for (int x = 0; x &lt; 101; ' +
'x++)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + ' +
'x;<br>}<br><br>System.out.print(sum);<br><br>Using Do Loops:<br>int sum = 0;<br>int x = 0;<br><br>do ' +
'<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + x;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x++;<br>} ' +
'while (x &lt; 101);<br><br>System.out.print(sum);<br><br>Using While Loops:<br>int sum = 0;<br>int x ' +
'= 0;<br><br>while (x &lt; 101)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + ' +
'x;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x++;<br>} <br><br>System.out.print(sum);</span></span></div>';
		feedbackText[120] = null;
		numberText[121] = '122.';
		questionText[121] = '<div class=\'default\'><span style=\'font-size:12pt\'>Underline the errors in the following method and ' +
'correct them.<br><br>public static absoluteMax int(int x; int y)<br>{ ' +
'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (Math.abs(x) &gt; ' +
'Math.abs(y)){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'x;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else if (Math.abs(x) &lt; Math.abs(y) ' +
'{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ' +
'y;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>';
		answerText[121] = '<div class=\'default\'>first int<br>semicolon in first line<br>no return in all possible cases<br>missing ' +
'end brace</div>';
		feedbackText[121] = null;
		numberText[122] = '123.';
		questionText[122] = '<div class=\'default\'><span style=\'font-size:12pt\'>Hiro has forgotten how to count and needs some help. ' +
'Write a program that tells Hiro the<br>numbers from 1 to 1000, while reminding him of the order. The ' +
'output should be in the format,<br>&#8220;1 is followed by 2&#8221;, &#8220;2 is followed by 3&#8221; ' +
'etc.</span></div>';
		answerText[122] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>for(int i = 1; i&lt;1000; ' +
'i++){<br>System.out.println(i + &quot; is followed by &quot; + (i+1));<br>}</span></div>';
		feedbackText[122] = null;
		numberText[123] = '124.';
		questionText[123] = '<div class=\'default\'><span style=\'font-size:12pt\'>Write a method that takes in miles and returns km. (1 ' +
'mile = 1.6 km)</span></div>';
		answerText[123] = '<div class=\'default\'><span style=\'font-size:12pt\'><br>convert(10);<br><br>Public static int convert (int ' +
'a) {<br>Return (a * 1.6)<br>}</span></div>';
		feedbackText[123] = null;
		numberText[124] = '125.';
		questionText[124] = '<div class=\'default\'><span style=\'font-size:12pt\'>Identify and fix 3 problems with the given ' +
'Method:<br><br>Public static void string(int a, int b) {<br>int c = a * b;<br>If (a &lt; b) {c - ' +
'a;}<br>Else {c - b;}<br>return c;<br>}</span></div>';
		answerText[124] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans: (Public should be public, a void statement should ' +
'not have a return value, invalid return type)</span></div>';
		feedbackText[124] = null;
		numberText[125] = '126.';
		questionText[125] = '<div class=\'default\'><span style=\'font-size:12pt\'>Fix the errors in this code to ensure you display the ' +
'numbers 100 .. 0:<br>for (int i = 100; i &lt; 0; i--) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'System.out.println(i);<br>}</span></div>';
		answerText[125] = '<div class=\'default\'><span style=\'font-size:12pt\'>Answer: i &lt; 0 should be i &gt; 0 or else the loop ' +
'will not run</span></div>';
		feedbackText[125] = null;
		numberText[126] = '127.';
		questionText[126] = '<div class=\'default\'><span style=\'font-size:12pt\'>Print a times table list for the numbers 1 to 12 ' +
'multiplied by the numbers 1 to 12, along with their answers. (ie. 1x1 = 1, 1x2 = 2, ... 1x12 = 12, ' +
'12x12 =144)</span></div>';
		answerText[126] = '<div class=\'default\'><span style=\'font-size:12pt\'>Ans:<br>for(int i = 1; i&lt;13; i++){<br>for(int j = 1; ' +
'j&lt;13; j++){<br>System.out.println(i + &quot; x &quot; + j + &quot; = &quot; + ' +
'(i*j));<br>}<br>}</span></div>';
		feedbackText[126] = null;
		numberText[127] = '128.';
		questionText[127] = '<div class=\'default\'><span style=\'font-size:12pt\'>The following code will not run. Change two variable ' +
'types in order to make it run. <br><br>double a = 136;<br>byte b = ' +
'-173;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>int x = ' +
'Math.abs(a*b);</span></div>';
		answerText[127] = '<div class=\'default\'><span style=\'font-size:12pt\'><br><br>Answer:<br>Make double a short since double ' +
'cannot be converted to int. Change byte into short since -173 is too large for a byte. <br><br>short ' +
'a = 136;<br>short b = -173;</span></div>';
		feedbackText[127] = null;
		numberText[128] = '129.';
		questionText[128] = '<div class=\'default\'><span style=\'font-size:12pt\'>What is the error with the following while loop?&nbsp; ' +
'Rewrite the loop that corrects this error.<br><br>import java.util.Scanner;<br>Scanner input = new ' +
'Scanner (System.in);<br>String password;<br>System.out.println(&#8220;Please enter a string ' +
'password&#8221;);<br>password = input.nextLine();<br>int pLength = password.length();<br>while ' +
'(pLength &lt; 8)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&#8220;Password not at ' +
'least 8 characters long &#8211; too short!&#8221;);<br>}</span></div>';
		answerText[128] = '<div class=\'default\'><span style=\'font-size:12pt\'>ANS: The while condition will always be true, leading ' +
'to an infinite loop of outputted lines saying that the password is not long enough. <br><br>import ' +
'java.util.Scanner;<br>Scanner input = new Scanner (System.in);<br>String ' +
'password;<br>System.out.println(&#8220;Please enter a string password&#8221;);<br>password = ' +
'input.nextLine();<br>int pLength = password.length();<br>while (pLength &lt; ' +
'8)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&#8220;Password not at least 8 ' +
'characters long &#8211; too short!&#8221;);<br></span><div style=\'text-indent:36pt\'><span style=\'font-size:12pt\'>System.out.println(&#8220;Please ' +
'enter a string password&#8221;);<br>password = input.nextLine();<br>int pLength = ' +
'password.length();<br></span></div><span style=\'font-size:12pt\'>}</span></div>';
		feedbackText[128] = null;

		FixMR(f);
		FixMTF(f);
		index = 0;
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = StripSpaces(f.elements[i].options[listIndex].value);
				} else {
					f.elements[i].value = StripSpaces(f.elements[i].value);
					text = f.elements[i].value;
				}

				if (text.length == 0)
					++numBlank;
				++index;
			}
		}

		if (numBlank > 0) {
			if (numBlank == 1)
				msg = "1 question";
			else
				msg = numBlank + " questions";
			if (!confirm("You have not answered " + msg +
				"  Are you sure you want to end the test?"))
				return(false);
		}

		index = 0;
		var scoreDetails = new Array();
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = f.elements[i].options[listIndex].value;
				} else
					text = f.elements[i].value;

				numPossible = ptsMap[index] * MAGIC;
				if (ansMap[index] == "") {
					scoreDetails[index] = "--";
					prefixText[index] = "<img src='exambankshortanswer_files/nograde.gif' align='middle'>";
					isCorrect = false;
					++numSubjective;
				} else {
					var scoreResult = ScoreAnswer(index, text, numPossible);
					numCorrect = scoreResult.numPoints;
					isCorrect = scoreResult.isCorrect;

					scoreDetails[index] = (Math.round(numCorrect * 100 / MAGIC) / 100).toString();
					prefixText[index] = BuildPrefixText(index, text, isCorrect);

					totalCorrect += numCorrect;
					totalPossible += numPossible;
				}

				if (showFeedback && feedbackText[index] != null && feedbackText[index].length > 0) {
					if (qtypeMap.charAt(index) == "2")
						feedbackIndex = text.charCodeAt(0) - 65;
					else
						feedbackIndex = (isCorrect) ? 0 : 1;
					feedbackText[index] = GetFeedback(feedbackText[index], feedbackIndex);
				}
				responseText[index] = TranslateHtmlString(text);

				scoreDetails[index] += " / " + (numPossible / MAGIC);
				++index;
			}
		}

		numCorrect = Math.round(totalCorrect * 100 / MAGIC) / 100;
		numPossible = Math.round(totalPossible * 100 / MAGIC) / 100;
		if (totalPossible > 0)
			scorePercent = Math.round(100.0 * totalCorrect / totalPossible);
		else
			scorePercent = 0;

		studentName = TranslateHtmlString(f.student_name.value);

		document.writeln("<html>\n<head>");
		document.writeln("<title>" + titleString + "</title>");
		document.writeln("<style type='text/css'>");
		for (i=0; i < styleText.length; ++i)
			document.writeln("\t" + styleText[i]);
		document.writeln("</style>\n</head>");

		document.writeln("<body bgcolor='#FFFFFF' style='background-image:url(exambankshortanswer_files/header.gif); background-repeat:no-repeat'>");
		document.writeln("<div style='font-size:12pt; font-family:\"Times New Roman\", \"Times\", serif; color:#000000;'>");

		document.writeln("<b>Name:</b> " + studentName + "<br>");
		document.write("<b>Score:</b> " + numCorrect + " / " + numPossible +
				" points (" + scorePercent + "%)");
		if (numSubjective > 0) {
			document.write("&nbsp;&nbsp;&nbsp;&nbsp; [" + numSubjective + " open-ended ");
			if (numSubjective == 1)
				document.write("question");
			else
				document.write("questions");
			document.write(" not graded]");
		}
		document.writeln("</div><br><br>");
		document.writeln("<div class='title'>" + titleString + "</div><br>");
		document.writeln("<table align='left' width='100%' border='0' cellpadding='0' cellspacing='0'>");

		currentInstruction = 0;
		currentNarrative = 0;
		for (i=0; i < numQuestions; ++i) {
			if (currentInstruction < numInstructions) {
				if (instructionIndex[currentInstruction] == i) {
					document.writeln("<tr><td colspan='3'><br>");
					document.writeln(instructionText[currentInstruction]);
					document.writeln("<div class='spacer'>&nbsp;</div>");
					document.writeln("</td></tr>");
					++currentInstruction;
				}
			}

			if (currentNarrative < numNarratives) {
				if (narrativeIndex[currentNarrative] == i) {
					document.writeln("<tr><td></td><td></td><td>");
					document.writeln(narrativeText[currentNarrative]);
					document.writeln("<div class='spacer'>&nbsp;</div>");
					document.writeln("</td></tr>");
					++currentNarrative;
				}
			}

			document.writeln("<tr valign='baseline'>");
			document.writeln("<td nowrap><p class='default'>" + prefixText[i] + "</p></td>");
			document.writeln("<td nowrap><p class='qnumber'>&nbsp;" + numberText[i] + "&nbsp;</p></td>");
			document.writeln("<td width='100%'>" + questionText[i]);
			document.writeln("<div style='font-size:2pt'></div><br>");
			document.writeln("<table width='100%' valign='baseline' cellpadding=0 cellspacing=0 border=0>");
			if (listMap.charAt(i) != "1") {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>RESPONSE:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + responseText[i] + "</p></td></tr>");
			}
			document.writeln("<tr valign='baseline'><td><p class='default'><b>ANSWER:&nbsp;</b></p></td>");
			document.writeln("<td width='100%'>" + answerText[i] + "</td></tr>");
			document.writeln("<tr valign='baseline'><td><p class='default'><b>POINTS:&nbsp;</b></p></td>");
			document.writeln("<td width='100%'>" + scoreDetails[i] + "</td></tr>");
			if (showFeedback && feedbackText[i] != null) {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>FEEDBACK:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + feedbackText[i] + "</p></td></tr>");
			}
			if (showRef) {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>REF:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + refText[i] + "</p></td></tr>");
			}
			document.writeln("</table>");
			document.writeln("<div class='spacer'>&nbsp;</div></td></tr>");
		}

		document.writeln("</table>");
		document.writeln("<br clear='all'>");
		document.writeln("<table align='left' width='100%' cellpadding=0 cellspacing=0 border=0>");
		document.writeln("<tr><td bgcolor='#000000'><div style='font-size:1pt'>&nbsp;</div></td></tr>");
		document.write("<tr><td valign='top'><a href='" + htmlUrl + "'>");
		document.writeln("<img src='exambankshortanswer_files/retake.gif' border=0 alt='Retake Test'></a></td>");
		document.writeln("</tr></table>");

		document.writeln("</body>");
		document.writeln("</html>");
		document.close();

		return(false);
	}

	function BuildPrefixText(answerIndex, responseText, isCorrect)
	{
		var	text;
		var	listIndex;

		text = "<tt>"
		if (isCorrect)
			text += "<img src='exambankshortanswer_files/correct.gif' align='middle'>"
		else
			text += "<img src='exambankshortanswer_files/wrong.gif' align='middle'>"

		if (listMap.charAt(answerIndex) == "1") {
			if (responseText.length == 0)
				responseText = "&nbsp;";
			text += "&nbsp;<u>&nbsp;" + responseText + "&nbsp;</u>";
		}

		text += "</tt>"
		return(text);
	}

	function TranslateHtmlString(text)
	{
		var	newText;
		var	replaceString;
		var	position;
		var	length;
		var	breakPos;
		var	skipExtra;
		var	i;

		newText = "";
		position = 0;
		length = text.length;
		while (position < length) {
			skipExtra = 0;
			breakPos = -1;
			for (i=position; i < length && breakPos < 0; ++i) {
				switch(text.charAt(i)) {
					case '>':
						replaceString = "&gt;";
						breakPos = i;
						break;
					case '<':
						replaceString = "&lt;";
						breakPos = i;
						break;
					case '&':
						replaceString = "&amp;";
						breakPos = i;
						break;
					case '\r':
						if ((i + 1) < length && text.charAt(i + 1) == '\n')
							skipExtra = 1;
						replaceString = "<br>";
						breakPos = i;
						break;
					case '\n':
						replaceString = "<br>";
						breakPos = i;
						break;
					case ' ':
						if ((i + 1 < length) && text.charAt(i + 1) == ' ') {
							replaceString = "&nbsp;";
							breakPos = i;
						}
						break;
				}
			}

			if (breakPos < 0) {
				newText += text.substring(position, length);
				position = length;
			} else {
				if (breakPos > position)
					newText += text.substring(position, breakPos);
				newText += replaceString;
				position = breakPos + 1 + skipExtra;
			}
		}

		return(newText);
	}

	function GetFeedback(text, index)
	{
		var list = text.split("\t");
		if (index >= 0 && index < list.length)
			return(list[index]);
			
		return("");
	}

	function TranslateAnswer(s, answerIndex)
	{
		return(s);
	}

	function ScoreAnswer(answerIndex, responseText, pointsPossible)
	{
		var answerText = TranslateAnswer(ansMap[answerIndex], answerIndex);
		var qtype = qtypeMap.charAt(answerIndex);
		var nrExactMatch = false;
		var result = new Array();

		result.numPoints = 0;
		result.isCorrect = false;

		if (qtype == "3" && answerText.substring(0, 2) == "p:") {
			answerText = answerText.substr(2);
			if (responseText.toUpperCase() == answerText.toUpperCase())
				result.isCorrect = true;
			else
				result.numPoints = MultiResponseCompare(responseText, answerText, pointsPossible);
		} else if (qtype == "6") {
			if (answerText.substring(0, 2) == "==") {
				answerText = answerText.substr(2);
				nrExactMatch = true;
			}
			if (NumericCompare(responseText, answerText, nrExactMatch))
				result.isCorrect = true;
		} else if (qtype == "7") {
			if (CompletionCompare(responseText, answerText))
				result.isCorrect = true;
		} else if (responseText.toUpperCase() == answerText.toUpperCase())
			result.isCorrect = true;

		if (result.isCorrect)
			result.numPoints = pointsPossible;

		return(result);
	}

	function StripSpaces(s)
	{
		var	len;
		var	i;

		len = s.length;
		for (i=len - 1; i >= 0 && s.charAt(i) == " "; --i)
			len = i;

		if (len == 0)
			s = "";
		else if (len != s.length)
			s = s.substring(0, len);

		return(s);
	}

	function MultiResponseCompare(responseText, answerText, pointsPossible)
	{
	}

	function NumericCompare(response, answer, exactMatch)
	{
	}


	function CompletionCompare(responseText, answerText)
	{
		return(false);
	}

	function FixMTF(f)
	{
	}

	function FixMR(f)
	{
	}

	function AllowReset()
	{
		return(window.confirm("Do you want to clear all of your answers?"));
	}

	function Restart()
	{
		if (AllowReset()) {
			document.TestForm.onreset = function() { };
			document.TestForm.reset();
			document.TestForm.onreset = function() { AllowReset(); };
		}
	}
// -->
</script>
</head>
<body onResize='if(document.layers && navigator.appVersion.indexOf("Win") < 0){history.go(0);}'
bgcolor='#FFFFFF' style='background-image:url(exambankshortanswer_files/header.gif); background-repeat:no-repeat'>
<noscript>
	<h3><font color='#FF0000'>Javascript not enabled</font></h3>
</noscript>
<script type='text/javascript' language='JavaScript'>
<!--
if (navigator.appName.indexOf("Netscape") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Netscape Navigator version 4.0 or later.");
} else if (navigator.appName.indexOf("Explorer") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Internet Explorer version 4.0 or later.");
}
// -->
</script>
<form name='TestForm' onReset='return(AllowReset())'>
<table align='left' width='100%' border='0' cellspacing='0'>
    <tr valign='top'>
	<td>
	    <div class='spacer'>&nbsp;</div>
	    <div class='default'>
	        <b>Name:</b>&nbsp;<input type='text' name='student_name' size='30'>
	    </div>
	    <div class='spacer'>&nbsp;</div>
	    <br>
	    <p class="title">Exam Bank</p>
	</td>
    </tr>
</table>
<br clear='all'>

<table align='left' width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr valign='top'>
	<td colspan='3'><br>
<div class='default'><b><span style='font-size:12pt'>Short Answer</span></b></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;1.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the difference between a class variable and
an instance variable?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:1' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;2.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that will organize 5 integer
parameters into a sorted array</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:2' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;3.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Fix the code <br>public class Fraction
{<br></span><div style='margin-left:42pt'><span style='font-size:12pt'>int num;<br>int
den;<br></span></div><div style='text-indent:21pt'><span style='font-size:12pt'>Fraction (int num,
int den) {<br></span></div><div style='text-indent:36pt'><span style='font-size:12pt'>num =
num;<br></span></div><div style='margin-left:36pt'><span style='font-size:12pt'>den =
den;<br></span></div><div style='text-indent:21pt'><span style='font-size:12pt'>}<br><br>public void
getNum () {<br></span></div><div style='margin-left:36pt'><span style='font-size:12pt'>return
this.num;<br></span></div><div style='text-indent:21pt'><span style='font-size:12pt'>}<br><br>public
Fraction add(Fraction f1, Fraction f2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Fraction(f1.num
+ f2.num, f1.den + f2.den);<br>}<br><br>public String TOSTRING () {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
return this.num + &#8220;/&#8221; + this.den;<br>}<br></span></div><div
style='margin-left:21pt'><span style='font-size:12pt'>}</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:3' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;4.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that asks for an integer and until
a negative integer is inputted. Output this first occurrence.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:4' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;5.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write code that will determine how many integers
are between a given number and the next<br>perfect square.<br><br>Ex if 56 is given, the program will
output 8 as 64 - 56 = 8. In the case of an input of 64, 17 will be outputted as it will calculate
based on the next perfect square (81).</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:5' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;6.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Fix the syntax in this line of
code:<br>system.Outprintln(Please print &#8220;this&#8221; so I can Pass)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:6' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;7.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Using loops, write the code that will make a 4x5
grid consisting of O&#8217;s:</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:7' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;8.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Consider the following code snippet.
<br></span><div style='margin-left:36pt'><span style='font-size:12pt'>if (aNumber &gt;=
0)<br>&nbsp;&nbsp;&nbsp; if (aNumber == 0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(&quot;first string&quot;);<br>else <br>&nbsp;&nbsp;&nbsp;
System.out.println(&quot;second string&quot;);<br>System.out.println(&quot;third
string&quot;);<br><br>What output is the output if aNumber is 3?</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:8' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;9.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that would print a message telling a
student if they failed.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:9' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;10.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Richard is playing a game of Yahzee. He needs a
method that will &#8220;roll&#8221; 6 fair-sided die and<br>add the numbers obtained from the rolling
of each die. Write that method.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:10' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;11.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a code fragment that determines how many
times the letter &#8216;m&#8217; is used in the<br>the given string.<br>String fett = &quot;I&#039;m
just a simple man trying to make my way in the universe.&quot;;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:11' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;12.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Orih is having a hard time in math class and needs
to practice his addition skills. Make a program that asks him to answer 20 addition questions and
only moves on if he gets the right answer.<br>Questions should be random and include numbers from 1
to 100.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:12' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;13.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What will be the output of this
program?<br></span><div style='margin-left:36pt'><span style='font-size:12pt'>public class
ArraysInJava<br>{<br>&nbsp;&nbsp;&nbsp; static void methodOne(int&#091;&#093;
a)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&#091;&#093; b = new
int&#091;5&#093;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a =
b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(a.length);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(b.length);<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp; public static void
main(String&#091;&#093; args)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int&#091;&#093; a = new int&#091;10&#093;;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
methodOne(a);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(a.length);<br>&nbsp;&nbsp;&nbsp; }<br>}</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:13' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;14.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font6'><span style='font-size:12pt'>Write a program that will
output the sum of all the previous integers of a number. For example, if the user inputs 5, the
output will be the sum of 5, 4, 3, 2 and 1.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:14' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;15.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Rachel is hungry. She needs to find a restaurant to
eat lunch. She rates all her restaurants<br>on a scale from 1 to 10 and eats at the restaurant with
the highest rating. After she eats at a<br>restaurant, she gets sick of it and subtracts 1 from the
rating of the restaurant. Every restaurant has a restaurant number and a distinct restaurant name for
identification.<br><br>Write a program that determines which restaurant Rachel will eat after <i>n
</i>meals (her (n+1)th<br>meal). The first input would be the number of restaurants, <i>r </i>(0 &lt;
r &lt; 50) and the number of<br>meals, <i>n </i>(0 &lt; n &lt; 50). The next <i>r </i>lines contain:
the restaurant name followed by the restaurant rating and the restaurant number. Output the
restaurant name of Rachel&#8217;s (<i>n </i>+ 1)th meal.<br><br>Note: If there is a tie, Rachel
visits the restaurant with the smaller restaurant number.<br>For example:<br>Input: 3 5<br>McDonalds
1 1<br>Starbucks 10 2<br>Warehouse 8 3<br><br>Output: Warehouse</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:15' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;16.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the output of the following code?<br>String
s = &#8220;Where am I?&#8221;;<br>System.out.println(s.toLowerCase().substring(1,5));</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:16' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;17.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the following piece of
code.<br></span><span style='font-size:12pt'><br></span><span style='font-size:12pt'>public class
Student {<br></span><div style='margin-left:42pt'><span style='font-size:12pt'>String name;<br>int
mark;<br></span></div><div style='text-indent:21pt'><span style='font-size:12pt'>public Student
(String name, int mark) {<br></span></div><div style='text-indent:36pt'><span
style='font-size:12pt'>this.name = name;<br></span></div><div style='margin-left:36pt'><span
style='font-size:12pt'>this.mark = mark;<br></span></div><div style='text-indent:21pt'><span
style='font-size:12pt'>}<br></span></div><span style='font-size:12pt'><br></span><div
style='text-indent:21pt'><span style='font-size:12pt'>public String toString ()
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.name + &#8220;: &#8221; +
this.mark;<br>}<br><br>public boolean equals (Student other){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
return this.mark == other.mark;<br>}<br><br>public static void main(String&#091;&#093;
args){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamesW = new Student(&#8220;James&#8221;,
90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamie = new Student(&#8220;Jamie&#8221;,
90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Student jamesV = new Student(&#8220;James&#8221;,
90);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(jamesV);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(jamie);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(jamesW.equals(jamie));<br>}<br></span></div><span
style='font-size:12pt'>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:17' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;18.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that would determine if a
student&#8217;s mark passes</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:18' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;19.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Make a constructor for the class called
&#8220;Bike&#8221;. The constructor has to set the default variables to: first gear, blue, 10, true,
in that order. <br></span><div style='margin-left:18pt'><span style='font-size:12pt'>int
gear;<br>String color;<br>int speed;<br>boolean inMotion;</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:19' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;20.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>A triangle has Area = 136, semi-perimeter = 29,
side b = 23, side c = 13. Create a program to calculate the value of a. Heron&#8217;s formula is
shown below if required.<br> Heron&#8217;s formula:&nbsp; a = -b - c + 2*s;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:20' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;21.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'><br></span><div style='margin-left:36pt'><span
style='font-size:12pt'>if (aNumber &gt;= 0)<br>&nbsp;&nbsp;&nbsp; if (aNumber ==
0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;first
string&quot;);<br>else <br>&nbsp;&nbsp;&nbsp; System.out.println(&quot;second
string&quot;);<br>System.out.println(&quot;third string&quot;);<br></span></div><span
style='font-size:12pt'><br>Use braces { and } to further clarify the code and reduce the possibility
of errors by future maintainers of the code.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:21' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;22.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>class Number{<br>int num;<br>}<br>myNum is an
instance of the class Number. Why would the code&nbsp;
&#8220;System.out.println(myNum)&#8221;<br>return Number@1ab5d3 instead of the value of the
myNum.num?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:22' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;23.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write method rndNum that returns a random integer
between int x and int y.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:23' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;24.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method, <b>sort</b>, that will print three
integer values in order of least to greatest.<br><br>public static void sort (int x, int y, int
z)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:24' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;25.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that tells whether a random coin is
heads or tails (1 = heads, 2 = tails)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:25' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;26.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method code that inputs a positive integer,
and outputs it in scientific notation (&#8220;a * 10^n&#8221; where a is between 0 and 10 exclusive,
and n is an integer).</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:26' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;27.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write an array <i>g </i>that stores the grades of a
class of <i>n </i>students based on user input<br>(0 <i>&lt;= g </i>&lt;= 100; <i>n </i>&gt; 0).
Write 3 functions that determine:<br>a) the mean of the grades (the average, i.e. sum / number of
students)<br>b) the mode of the grades (the grade with the most occurrences)<br>c) the median of the
grades (the &#8220;middle&#8221; grade)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:27' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;28.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font8'><span style='font-size:12pt'>Given the phrase &#8220;The
quick brown fox jumped over the lazy dog&#8221;, write a method to find all the indexes for the
spaces in the phrase.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:28' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;29.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write method printX that prints a line of String x,
int y times.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:29' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;30.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What would be the output of the following
code?<br><br>public static double Method1 (int num1, int num2)<br>{<br>System.out.println(&quot;First
Calculation&quot;);<br>return num1+num2;<br>}<br>public static int Method (int var1, int
var2)<br>{<br>System.out.println(&quot;Second Calculation&quot;);<br>return var1-var2;<br>}<br>public
static void main(String&#091;&#093; args)
{<br>{<br>System.out.println(Method(10,25));<br>System.out.println(Method1(30,89));<br>}<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:30' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;31.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Mark is trying to collect the real names of users
on her social media website. Unfortunately,<br>many users have been trolling his system and are
inserting characters into their names that<br>clearly do not belong. Using a loop, how can Mark force
users to insert proper names (i.e: names that do not include symbols and integers)?<br>Use the
variable &#8220;name&#8221; for user input.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:31' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;32.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Crystal is works at a bank and is concealing PINs.
Once someone types in their PIN, all the<br>characters should be replaced with a &#8216;*&#8217;.
Write a loop that changes all characters to an asterisk and prints the resulting string. The PIN is a
string.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:32' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;33.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>When would you choose to use a while loop?&nbsp;
Provide a specific example.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:33' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;34.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that prints out all the duplicate
values in a given integer array with an array.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:34' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;35.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a piece of code to display the following
using
loops:<br>1<br>22<br>333<br>4444<br>55555<br>666666<br>7777777<br>88888888<br>999999999</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:35' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;36.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font6'><span style='font-size:12pt'>Write a program that calculates
the average of the numbers entered. It will continue outputting the average as new numbers are
entered until the user inputs a 0. <br></span></span><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='92%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'><span class='font6'><span style='font-size:12pt'>Sample
Input</span></span></td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'><span class='font6'><span
style='font-size:12pt'>Sample Output</span></span></td></tr><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'><span class='font6'><span style='font-size:12pt'>3</span></span></td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'><span
class='font6'><span style='font-size:12pt'>3</span></span></td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'><span class='font6'><span style='font-size:12pt'>7</span></span></td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'><span
class='font6'><span style='font-size:12pt'>5</span></span></td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'><span class='font6'><span style='font-size:12pt'>6</span></span></td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'><span
class='font6'><span style='font-size:12pt'>5.33333</span></span></td></tr><tr valign='top'><td
class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'><span class='font6'><span
style='font-size:12pt'>0</span></span></td><td class='pad' style=' border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>&nbsp;</td></tr><tr height='0' style='border:none'><td
width='50%'></td><td width='50%'></td></tr></table></div><div style='font-size:2pt'></div>
		<textarea name='SA:36' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;37.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>**** Write a function to return all possible
combinations of 3 elements of an array<br>&nbsp;&nbsp; (you may write helper
functions)<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093; x = {-4, 11, 0,
-7};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; comb2(x) =&gt; {{0, 11, -7}, {-4, 0, 11}, {-7, 11,
-4}, {-4, -7, 0}}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:37' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;38.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method to draw onto a JFrame a circle with
center (x,y) and radius r</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:38' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;39.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What does the &#8220;static&#8221; keyword mean ?
Can you override private or static method in Java ?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:39' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;40.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is wrong with the following if
statement?<br>if num1 =! 0{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Counter1
++<br>else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Counter1 ==counter1;<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:40' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;41.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>A word is called <i>palindrome </i>if it is the
same forward and backwards, i.e. reflective.<br>Palindromes include <i>anna</i>, <i>civic</i>,
<i>level</i>, <i>racecar</i>, etc. Given a word (no spaces) <i>s</i>, write a<br>program that
determines if it is <i>palindrome</i>. Output true if it is a palindrome and false if it is
not.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:41' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;42.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><div style='margin-left:4pt'><span style='font-size:12pt'>Write a method called
<b><i>reverse</i></b> that takes in an integer array and reverses the order of the
elements.</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:42' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;43.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font8'><span style='font-size:12pt'>Given the phrase &#8220;Lorem
ipsum,&#8221; write a method that returns the amount of occurrences the letter &#8220;m&#8221; shows
up in the phrase.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:43' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;44.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of:<br>&nbsp;&nbsp;&nbsp;
int&#091;&#093; a = {1, 2, 3};<br>&nbsp;&nbsp;&nbsp; int&#091;&#093; b = a;<br>&nbsp;&nbsp;&nbsp;
System.out.println(b&#091;a&#091;2&#093;&#093;);</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:44' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;45.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write an instance method to multiply two fractions
together, and return the product.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div style='font-size:2pt'></div>
		<textarea name='SA:45' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;46.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>**** Write a function to transpose a 2d
array<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093;&#091;&#093; x = {{1, 2}, {4, 5}, {10,
12}};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; transpose(x) =&gt; {{1, 4, 10}, {2, 5,
12}}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:46' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;47.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method, <b>cross</b>, that will organize
and print multiple instances of a character into a cross shape of defined length and width (length
and width are identical).<br><br>public static void cross(char filler, int length)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:47' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;48.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Explain the differences between an instance method
and a class method.<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div style='font-size:2pt'></div>
		<textarea name='SA:48' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;49.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the following code if the
input is 7: <br>x = input.nextInt();<br>If ( x &lt; 4){<br>&nbsp; System.out.print(x*2 + 6
-24);<br>}<br>else if (x &gt; 2){<br>&nbsp; System.out.print(x/6 * 6 + 2);<br>}<br>else if (x &gt;=
9){<br>&nbsp; System.out.print(4/2-3 % 3);<br>}<br>else{<br>&nbsp; System.out.print(5/2 +
9/3);<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:49' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;50.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Rewrite the following code without
mistakes:<br>public int randomNumber()<br>{<br>Random rnd = new Random&#091;&#093;<br>randomnumber =
rnd.nextInt(50)+1;<br>int Fred == randomnumber;<br>return Fred<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:50' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;51.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Describe the difference between an instance method
and a class method.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:51' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;52.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method to check if input String is
Palindrome?&nbsp; A Palindrome is the same word spelt forward and backward.&nbsp;
&#8220;MOM&#8221;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:52' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;53.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Create a Car class which has the fields: model,
make and colour. Create a default constructor, non-default constructor, getters and setters, toString
method and an equals method.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:53' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;54.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>List 2 differences between for loops and do
loops.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:54' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;55.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Consider the following class:<br></span><div
style='margin-left:36pt'><span style='font-size:12pt'>public class IdentifyParts
{<br>&nbsp;&nbsp;&nbsp; public static int x = 7;<br>&nbsp;&nbsp;&nbsp; public int y = 3;<br>}
<br></span></div><div style='margin-left:54pt'><span
style='font-size:12pt'>a.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; What are the class
variables?<br></span></div><div style='margin-left:54pt'><span
style='font-size:12pt'>b.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; What are the instance
variables?<br>c.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; What is the output from the following
code:<br></span></div><div style='margin-left:54pt'><span style='font-size:12pt'>IdentifyParts a =
new IdentifyParts(); <br>IdentifyParts b = new IdentifyParts(); <br>a.y = 5; <br>b.y = 6; <br>a.x =
1; <br>b.x = 2; <br>System.out.println(&quot;a.y = &quot; + a.y); <br>System.out.println(&quot;b.y =
&quot; + b.y); <br>System.out.println(&quot;a.x = &quot; + a.x); <br>System.out.println(&quot;b.x =
&quot; + b.x); <br>System.out.println(&quot;IdentifyParts.x = &quot; +
IdentifyParts.x);</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:55' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;56.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a class method that will return the boolean
value &#8216;true&#8217; if an integer parameter is greater than 10, smaller than 30, and divisible
by 2. Try to make your code optimized!</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:56' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;57.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font6'><span style='font-size:12pt'>Write a program that will ask
the user for a secret number until they enter it.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:57' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;58.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the output if the input is 42:<br>x =
input.nextInt();<br>if ( x &lt; 2){<br> if (x + 2 == 43)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp; if
(x &#8211; 5 &lt; 31)<br>&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(x % 2 = 0)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(32)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;
}<br>&nbsp;&nbsp; }<br>}<br>else if (x &gt; 56){<br>&nbsp; System.out.print(x/4 * 6 +
2);<br>}<br>else if (x &lt;= 54){<br>&nbsp; if (x + 2 == 44)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;
if (x &#8211; 5 = 37)<br>&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(x % 2 = 1)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(x %
5)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(x % 7)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;
}<br>&nbsp; }<br>}<br>else{<br>&nbsp; System.out.print(5/2 + 9/3);<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:58' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;59.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a class method heading that returns a Julian
value, and which passes in a String and long value.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:59' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;60.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a piece of code that asks for and records the
percentage test results for 100 people</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:60' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;61.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method, <b>lcm</b>, that will return the
lowest common multiple of two integers.<br><br>public static int lcm(int a, int b)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:61' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;62.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the code, and give a bit of
justification:<br><br>public static void main(String args&#091;&#093;)
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a = 2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b =
3;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; doNumbers(a, b);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(a + b);<br>}<br><br>public static void doNumbers(int a, int b)
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a -= b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b =
0;<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:62' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;63.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>The geometric mean is defined as the <i>nth
</i>root of the product of <i>n </i>integers. Write a method to determine the geometric mean of the
elements in a given string array.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:63' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;64.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>a = 0;<br>b = a;<br>b = 2;<br>a and b are both
instances of a class. What is the current value of a? Explain your answer.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:64' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;65.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a piece of code that asks for two positive
integers and finds the remainder of the first number divided by the second number, without modulus
(%).</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:65' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;66.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Sarah needs to select a song from the Hamilton
musical to listen to. There are 46 songs in the<br>playlist. Write a method that allows her to select
a random song.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:66' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;67.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write boolean method evenDivide which checks if a
integer n1 is perfectly divisible by integer n2.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:67' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;68.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Create a method which will randomly choose one of
the following colors:<br></span><div style='margin-left:36pt'><span
style='font-size:12pt'>1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Red, 2) Blue, 3) Green</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:68' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;69.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a line of code which identifies the number of
words in a sentence.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:69' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;70.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that will take in an integer array
with any number of elements. The method must select a RANDOM element from the array, PRINT it, and
REMOVE it from the array (create a new array). Continue this process until the array has one element
left, and RETURN that value.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:70' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;71.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the output of the following code?<br>String
s = &#8220;This is &#8221;;<br>int n = 2;<br>System.out.println(s+ (char) (&#8216;a&#8217;+n) +
&#8220; string&#8221;);</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:71' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;72.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that asks the user to enter their
top 3 marks. The method will then calculate the average and if less than 75 print &#8220;Keep
Going&#8221;, 76-89 print &#8220;Not bad&#8221;, and if 90-100 print &#8220;WOOO GOOD
JOB&#8221;.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:72' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;73.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that outputs the first ten
Fibonacci numbers using a for loop, using three integer variables only.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:73' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;74.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method heading that passes in a Rectangle,
int, double, and boolean value.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:74' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;75.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'><br></span><div style='margin-left:36pt'><span
style='font-size:12pt'>Correct the following code segment<br></span></div><div
style='margin-left:36pt'><span style='font-size:12pt'>public static void main(String&#091;&#093;
argv)<br>&#160;&#160;&#160;{<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Char x = &#8220;I LOVE
ICS&#8221;;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(x);
&#160;<br>&#160;&#160;&#160;}</span></div></div><div style='font-size:2pt'></div>
		<textarea name='SA:75' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;76.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the following code<br>int x
= 43;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>int y = 3/2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp;&nbsp;&nbsp;&nbsp; if (Math.pow((x%15)/3, y) &gt;= 12){<br>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  System.out.println(&quot;Yes&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; else{<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
System.out.println(&quot;No&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:76' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;77.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Given the class <br>public class NumberHolder
{<br>&nbsp;&nbsp;&nbsp; public int anInt;<br>&nbsp;&nbsp;&nbsp; public float aFloat;<br>}<br>a)
Create an instance of this class<br>b) Initialize its two member variables<br>c) Display the value of
each variable</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:77' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;78.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that can determine, when two times
are given in ##:##AM or ##:##PM form, which time has occurred earlier. Output &#8220;FIRST&#8221; if
the first time occurs earlier and output &#8220;SECOND&#8221; if the second time occurs earlier,
assuming that the two given times are different.<br>CLARIFICATION: 12:00AM (midnight) occurs before
12:00PM (noon).<br>Example - input: 12:03AM 09:03PM output: FIRST</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:78' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;79.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Code a class variable called &#8220;myVar&#8221;
that cannot be modified without the use of a mutator method. When would you use such a
variable?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:79' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;80.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>for (x = 0; x &gt; 10; x++)
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (x % 2 = 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.print(x);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>}<br>List 3 flaws in this code if it is
supposed to print &#8220; 0246810 &#8221;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:80' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;81.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>If int&#091;&#093; a = new int&#091;&#093; {1, 2,
3} and int&#091;&#093; b = new int&#091;&#093; {1, 2, 3} , explain whether a == b will return true or
false, why and, if false, a better way to compare both arrays.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:81' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;82.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write three overloaded methods that will:<br>a.
Print all integers from 1 to 1000, identifying each as either composite or prime..<br>b. Print all
multiples of a certain integer from 1 to 1000.<br>c. Print all multiples of a certain integer within
a set range. An invalid range should be treated appropriately.<br><br>public static void
listMulti()<br><br>public static void listMulti(int check)<br><br>public static void listMulti(int
check, int min, int max)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:82' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;83.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the code, and give a bit of
justification:<br><br>class NumberHolder {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int
value;<br>}<br><br>public class Project {<br><br>public static void main(String args&#091;&#093;)
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NumberHolder n = new
NumberHolder();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n.value =
7;doNumbers(n);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(n.value);<br>}<br>public static
void doNumbers(NumberHolder a) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.value *=
2;<br>}<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:83' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;84.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write the piece of code that forces a user to enter
a password until they get it right.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:84' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;85.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write the code to print just the second letter of
this string.<br>String cde = &quot;cde&quot;;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:85' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;86.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a single Java statement to print out the
following:<br><br>According to everyone: <br>&quot;Karim is good at ICS&quot;!</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:86' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;87.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write, using methods, code that will calculate the
intrest for 10 years, at 2% compounded monthly as inserted by the user.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:87' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;88.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Transform the following do while loop to a for
loop:<br><br>int n1 = 0, sum = 0;<br>do {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n1 +=
2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += n1;<br>} while (sum &lt;=
12);<br>System.out.println(&#8220;Sum:&nbsp; &#8221; + sum);</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:88' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;89.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the output of this code:<br>int i =
256;<br>while (i % 2 == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i / 2;<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:89' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;90.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a dynamic array <i>g </i>that stores the
grades of the class (the number of students <i>n </i>is not given - prompt user to enter the next
student&#8217;s grade and terminate when a negative grade is entered). Hint: dynamic array = the
array must be able to increase its length.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:90' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;91.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Create an Account class which will represent a
person&#8217;s bank account. It should have the fields of name and balance. It should have methods
deposit, withdraw and showInformation. Finally, instantiate the class and use the methods. The
program should prompt the user for their name and balance. Then 4 choices are provided: show
information, deposit, withdraw or exit. The withdrawn amount cannot be greater than the
balance.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:91' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;92.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that will calculate the total price
(tax included) of a given item, when user enters subtotal. (13% tax only)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:92' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;93.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a constructor method for a rectangle, include
height and width as integers.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:93' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;94.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Phoebe has to make up random sentences about the
weather. Write a method that randomly<br>selects a question from a list.<br>Output
sentences:<br>&#8220;It&#8217;s going to be rainy today.&#8221;<br>&#8220;It&#8217;s going to snow
today.&#8221;<br>&#8220;It&#8217;s going to be sunny today.&#8221;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:94' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;95.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'> Write a function to append two int lists
together.&nbsp; For example:<br><br>int&#091;&#093; x = {4, 6, 8}; <br>int&#091;&#093; y = {-1, -3,
-5};<br>concat(x, y) =&gt; {4, 6, 8, -1, -3, -5}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:95' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;96.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a code fragment that returns &#8220;tee are
ai am&#8221; using a predefined string s, where s = &#8221;&nbsp;&nbsp; Tee Are Ai Am&nbsp;&nbsp;
&#8221;.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:96' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;97.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a for loop that will print the factors of a
given integer x<br>Ex. x = 12 would print &#8220;1 2 3 4 6 12 &#8221;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:97' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;98.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Why would someone want to use
methods?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:98' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;99.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>The ternary numeral system only uses the digits 0,
1, and 2. Each digit represents a multiple of a power of three. For example, 102 in ternary
represents 2*3 0 +0*3 1 +1*3 2 = 11. Given an integer array containing the digits of a ternary
number, write a method to convert it into a decimal number(e.g, such that {1, 0, 2} is converted to
11).</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:99' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;100.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a Boolean method called
&#8220;checking&#8221; which has two integer parameters. The method should check true if the
denominator is greater than the numerator, and checks false if the denominator is less the
numerator.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:100' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;101.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>**** Write a function to convert a 1d array into a
2d array with given dimensions<br>&nbsp;&nbsp; (empty values should be converted to
-1)<br>&nbsp;&nbsp;&nbsp; Ex. int&#091;&#093; x = {1, 2, 3, 4, 5, 6,
7};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int width = 4; int height =
2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; convert2d(x, width, height) =&gt; {{1, 2, 3, 4}, {5,
6, 7, -1}}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:101' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;102.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>When the following code fragment is run it returns
an error. Is it a syntax or logic error?&nbsp; Correct the issue.<br><br>String name = &quot;Do or do
not, there is no
try.&quot;;<br>System.out.println(name.substring(name.indexOf(o,2).length()));</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:102' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;103.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method to determine the longest element in
a string array.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:103' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;104.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write the code that will prompt the user to
continue to enter values until the number entered is below 0 or above 1000:</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:104' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;105.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Import java.util.Scanner<br>Scanner input = new
Scanner(System.in);<br>Write the code that will determine if a number is even?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:105' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;106.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the following code
fragment.<br>String cat = &quot;tuna can&quot;;<br>String dog = &quot;beef
cat&quot;;<br>System.out.println(cat.length()==dog.length());</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:106' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;107.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Strings are immutable objects. Explain, using an
example, whether it is possible to change the value a string refers to.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:107' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;108.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that asks for a string and a
character from the user. The program will then return how many times the character is found within
the string</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:108' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;109.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is Function Overriding and Overloading in Java
?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:109' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;110.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Find three changes that could be made to the second
definition of billyBobJoe to ensure valid<br>overloading.<br><br>public static void billyBobJoe(int
a, String msg) {<br>**some cool code goes here**<br>}<br>public static String billyBobJoe(int init,
String returnValue) {<br>**more cool code goes here**<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:110' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;111.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method to determine the indexes of all the
a&#8217;s (lowercase and uppercase) in a given<br>string.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:111' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;112.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the difference between equals() method and
== operator?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:112' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;113.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a class that defines a card (add a variable
for suit and a variable for value) and add a constructor method with parameters of s (for suit) and
val (for value).</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:113' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;114.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that takes in 3 numbers and prints
them smallest to largest.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:114' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;115.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font6'><span style='font-size:12pt'>Give an example of an infinite
loop and explain the problems they cause.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:115' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;116.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Fix the code:<br>input = nextint;<br>Boolean
Integer = 5;<br>integer = input;<br>If ( integer &lt; 4){<br>&nbsp; System.out.print(x*2 + 6
-24);<br>}<br>else if (integer &gt; 2){<br>&nbsp; System.out.print&#091;x/6 * 6 +
2&#093;;<br>}<br>else if (integer &gt;= 9){<br>&nbsp; System.out.print(4/2-3 %
3)<br>}<br>else{<br>&nbsp; System.out.print{5/2 + 9/3};<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:116' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;117.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a for loop that will print out all the even
numbers between 2 user inputted numbers:</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:117' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;118.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Indicate the output of the following statement:
System.out.println(&#8220;What exactly is &#8221; + &#8220;this \&#8221;code\&#8221; actually &#8221;
+ <br>&#8220;trying \n to tell&#8221; + &#8220;you?&#8221;)?</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:118' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;119.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that converts from seconds to
hours, minutes, and seconds. For example, an input of 4000 seconds would print &#8220;1 hour, 6
minutes, 40 seconds&#8221;.&nbsp; Still print 0 if there are 0 hours, minutes, or seconds. Also,
print the singular and plural form accordingly (do not print 1 seconds). (input is the number of
seconds as a positive integer)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:119' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;120.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a program that asks the user to guess the
number held by variable integer &#8220;answer&#8221;</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:120' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;121.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span class='font6'><span style='font-size:12pt'>Write two different methods
that will calculate the sum of the integers 0 to 100, each methods should use a different type of
loop.</span></span></div><div style='font-size:2pt'></div>
		<textarea name='SA:121' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;122.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Underline the errors in the following method and
correct them.<br><br>public static absoluteMax int(int x; int y)<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (Math.abs(x) &gt;
Math.abs(y)){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return
x;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else if (Math.abs(x) &lt; Math.abs(y)
{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return
y;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div style='font-size:2pt'></div>
		<textarea name='SA:122' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;123.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Hiro has forgotten how to count and needs some
help. Write a program that tells Hiro the<br>numbers from 1 to 1000, while reminding him of the
order. The output should be in the format,<br>&#8220;1 is followed by 2&#8221;, &#8220;2 is followed
by 3&#8221; etc.</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:123' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;124.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Write a method that takes in miles and returns km.
(1 mile = 1.6 km)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:124' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;125.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Identify and fix 3 problems with the given
Method:<br><br>Public static void string(int a, int b) {<br>int c = a * b;<br>If (a &lt; b) {c -
a;}<br>Else {c - b;}<br>return c;<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:125' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;126.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Fix the errors in this code to ensure you display
the numbers 100 .. 0:<br>for (int i = 100; i &lt; 0; i--) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.out.println(i);<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:126' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;127.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>Print a times table list for the numbers 1 to 12
multiplied by the numbers 1 to 12, along with their answers. (ie. 1x1 = 1, 1x2 = 2, ... 1x12 = 12,
12x12 =144)</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:127' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;128.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>The following code will not run. Change two
variable types in order to make it run. <br><br>double a = 136;<br>byte b =
-173;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>int x =
Math.abs(a*b);</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:128' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
	</td>
	<td>
		<p class='qnumber'>&nbsp;129.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'><span style='font-size:12pt'>What is the error with the following while
loop?&nbsp; Rewrite the loop that corrects this error.<br><br>import java.util.Scanner;<br>Scanner
input = new Scanner (System.in);<br>String password;<br>System.out.println(&#8220;Please enter a
string password&#8221;);<br>password = input.nextLine();<br>int pLength = password.length();<br>while
(pLength &lt; 8)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&#8220;Password not at
least 8 characters long &#8211; too short!&#8221;);<br>}</span></div><div style='font-size:2pt'></div>
		<textarea name='SA:129' rows='5' cols='60' wrap='virtual'></textarea>

<div class='spacer'>&nbsp;</div>
	</td>
</tr>
</table>
<br clear='all'>
<br>
<br>
<table align='left' width='100%' cellpadding='0' cellspacing='0' border='0'>
<tr>
    <td bgcolor='#000000'>
	<div style='font-size:1pt'>&nbsp;</div>
    </td>
</tr>
<tr>
    <td><a href='javascript:alert("Use the mouse to submit.")'
	   onMouseOver='window.status = "Check Your Work"; return true'
	   onMouseOut='window.status = ""; return true'
	   onFocus='window.status = "Check Your Work"; return true'
	   onBlur='window.status = ""; return true'
	   onClick="return(GradeIt(document.forms[0]))">
	     <img src='exambankshortanswer_files/chkwork.gif' border='0' alt='Check Your Work'></a>
	&nbsp;&nbsp;&nbsp;
	<a href='#' onclick='Restart(); return false'>
	     <img src='exambankshortanswer_files/restart.gif' border='0' alt='Start Over'></a>
    </td>
</tr>
</table>
</form>
</body>
</html>